{"version":3,"file":"static/js/1923.6310e943.chunk.js","mappings":"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","sources":["components/StatisticsWidget.tsx","pages/dashboard/Dashboard1/Statistics.tsx","pages/dashboard/Dashboard1/OpenLeads.jsx","pages/dashboard/Dashboard1/UpcomingEventsTable.jsx","pages/dashboard/Dashboard1/AdminLeads.jsx","pages/dashboard/Dashboard1/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport CountUp from \"react-countup\";\n\ninterface StatisticsWidgetProps {\n  variant: string;\n  description: string;\n  stats: string;\n  icon: string;\n  counterOptions?: any;\n}\n\nconst StatisticsWidget = (props: StatisticsWidgetProps) => {\n  return (\n    <>\n      <Card className=\"widget-rounded-circle\">\n        <Card.Body>\n          <Row>\n            <Col className=\"col-6\">\n              <div\n                className={classNames(\n                  \"avatar-lg\",\n                  \"rounded-circle\",\n                  \"bg-soft-\" + props[\"variant\"],\n                  \"border-\" + props[\"variant\"],\n                  \"border\"\n                )}\n              >\n                <i\n                  className={classNames(\n                    props[\"icon\"],\n                    \"avatar-title\",\n                    \"font-22\",\n                    \"text-\" + props[\"variant\"]\n                  )}\n                ></i>\n              </div>\n            </Col>\n            <Col className=\"col-6\">\n              <div className=\"text-end\">\n                <h3 className=\"text-dark mt-1\">\n                  <span>\n                    <CountUp\n                      duration={1}\n                      end={props[\"stats\"]}\n                      {...props[\"counterOptions\"]}\n                    />\n                  </span>\n                </h3>\n                <p className=\"text-muted mb-1 text-truncate\">\n                  {props[\"description\"]}\n                </p>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StatisticsWidget;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// componets\nimport StatisticsWidget from \"../../../components/StatisticsWidget\";\n\nconst Statistics = ({ leads }: any) => {\n  return (\n    <>\n      <Row>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"primary\"\n            description=\"Total Leads\"\n            stats={leads?.length || 0}\n            icon=\"fe-heart\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"success\"\n            description=\"Ongoing Leads\"\n            stats={\n              leads?.filter((x: any) => x.leadStatus === \"Ongoing\")?.length || 0\n            }\n            icon=\"fe-shopping-cart\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"info\"\n            description=\"Closed Leads\"\n            stats={\n              leads?.filter((x: any) => x.leadStatus === \"Closed\")?.length || 0\n            }\n            icon=\"fe-bar-chart-line-\"\n          />\n        </Col>\n        <Col md={6} xl={3}>\n          <StatisticsWidget\n            variant=\"warning\"\n            description=\"Rejected Leads\"\n            stats={\n              leads?.filter((x: any) => x.leadStatus === \"Rejected\")?.length ||\n              0\n            }\n            icon=\"fe-eye\"\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Statistics;\n","import React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { FormInput } from \"../../../components\";\nimport { getSalesUsers } from \"../../apps/CRM/common\";\nimport { editApi } from \"../../apps/CRM/CustomerLeads/helper\";\n\nconst AssignUser = (props) => {\n  const onChange = (e) => {\n    props.onAssigneeChange({\n      ...props?.row?.original,\n      assignee: e?.target?.value,\n    });\n  };\n  return (\n    <FormInput\n      placeholder=\"Select Assignee\"\n      onChange={onChange}\n      type=\"select\"\n      value={props.row?.original?.assignee}\n      name=\"assignee\"\n      width={180}\n    >\n      {props.options?.map((x) => (\n        <option value={x}>{x}</option>\n      ))}\n    </FormInput>\n  );\n};\n\nconst OpenLeads = ({ openLeads, loadCustomerLeads }) => {\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    getSalesUsers().then((response) =>\n      setOptions([\"Unassigned\"].concat(response?.map((x) => x?.username)))\n    );\n  }, []);\n\n  const onAssigneeChange = (updatedRow) => {\n    editApi(updatedRow?.id, updatedRow).then(() => {\n      loadCustomerLeads();\n    });\n  };\n\n  const userString = sessionStorage.getItem(\"ubold_user\") || \"\";\n  const user = JSON.parse(userString);\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title mb-3\">Ongoing Customer Leads</h4>\n          <div className=\"table-responsive\">\n            <table className=\"table table-borderless table-hover table-nowrap table-centered m-0\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Phone</th>\n                  <th>Company</th>\n                  <th>Category</th>\n                  <th>Source</th>\n                  {user?.role === \"Admin\" && (\n                    <th style={{ width: 100 }}>Assignee</th>\n                  )}\n                  <th>Created Date</th>\n                  <th>Lead Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {openLeads.map((lead) => (\n                  <tr key={lead.id}>\n                    <td>{lead.name}</td>\n                    <td>{lead.email}</td>\n                    <td>{lead.phone}</td>\n                    <td>{lead.company}</td>\n                    <td>{lead.category}</td>\n                    <td>{lead.source}</td>\n                    {user?.role === \"Admin\" && (\n                      <td>\n                        <AssignUser\n                          row={{\n                            original: { ...lead, assignee: lead?.assignee },\n                          }}\n                          options={options}\n                          onAssigneeChange={onAssigneeChange}\n                        />\n                      </td>\n                    )}\n                    <td>{lead.createdDate?.split(\"T\")?.[0]}</td>\n                    <td>{lead.leadStatus}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default OpenLeads;\n","import React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport config from \"../../../config\";\n\nconst UpcomingEventsTable = () => {\n  const [upcomingEvents, setUpcomingEvents] = useState([]);\n  const userString = sessionStorage.getItem(\"ubold_user\");\n  const user = JSON.parse(userString);\n\n  useEffect(() => {\n    const fetchUpcomingEvents = async () => {\n      try {\n        const response = await fetch(`${config.API_URL}/events/upcoming/all`);\n        const data = await response.json();\n        setUpcomingEvents(data?.filter((x) => x.username === user?.username));\n      } catch (error) {\n        console.error(\"Error fetching upcoming events:\", error);\n      }\n    };\n\n    fetchUpcomingEvents();\n  }, []);\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title mb-3\">Upcoming Events</h4>\n          <div className=\"table-responsive\">\n            <table className=\"table table-borderless table-hover table-nowrap table-centered m-0\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Start</th>\n                  <th>End</th>\n                  {/* Add more table headers as needed */}\n                </tr>\n              </thead>\n              <tbody>\n                {upcomingEvents.map((event) => (\n                  <tr key={event.id}>\n                    <td>{event.title}</td>\n                    <td>{new Date(event.start).toLocaleString()}</td>\n                    <td>\n                      {event.end ? new Date(event.end).toLocaleString() : \"N/A\"}\n                    </td>\n                    {/* Add more table data cells as needed */}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default UpcomingEventsTable;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst AdminLeads = ({ leads }) => {\n  // Function to calculate assignee metrics\n  const getAssigneeMetrics = () => {\n    const assigneeMetrics = {};\n\n    // Calculate metrics for each assignee\n    leads.forEach((lead) => {\n      const { assignee, leadStatus } = lead;\n      if (!assigneeMetrics[assignee]) {\n        assigneeMetrics[assignee] = {\n          onGoingLeads: 0,\n          closedLeads: 0,\n          rejectedLeads: 0,\n        };\n      }\n      switch (leadStatus) {\n        case \"Open\":\n          assigneeMetrics[assignee].onGoingLeads++;\n          break;\n        case \"Ongoing\":\n          assigneeMetrics[assignee].onGoingLeads++;\n          break;\n        case \"Closed\":\n          assigneeMetrics[assignee].closedLeads++;\n          break;\n        case \"Rejected\":\n          assigneeMetrics[assignee].rejectedLeads++;\n          break;\n        default:\n          break;\n      }\n    });\n\n    return assigneeMetrics;\n  };\n\n  const assigneeMetrics = getAssigneeMetrics();\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title mb-3\">Assignee Metrics</h4>\n          <div className=\"table-responsive\">\n            <table className=\"table table-borderless table-hover table-nowrap table-centered m-0\">\n              <thead>\n                <tr>\n                  <th>Assignee</th>\n                  <th>On Going</th>\n                  <th>Closed</th>\n                  <th>Rejected</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(assigneeMetrics).map((assignee) => (\n                  <tr key={assignee}>\n                    <td>{assignee}</td>\n                    <td>{assigneeMetrics[assignee].onGoingLeads}</td>\n                    <td>{assigneeMetrics[assignee].closedLeads}</td>\n                    <td>{assigneeMetrics[assignee].rejectedLeads}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default AdminLeads;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport * as customerLeads from \"../../apps/CRM/CustomerLeads/helper\";\n\nimport Statistics from \"./Statistics\";\nimport OpenLeads from \"./OpenLeads\";\nimport UpcomingEventsTable from \"./UpcomingEventsTable\";\nimport AdminLeads from \"./AdminLeads\";\n\nconst Dashboard1 = () => {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n\n  const [leads, setLeads] = useState<any>([]);\n  const loadCustomerLeads = () => customerLeads.getAllApi().then(setLeads);\n  useEffect(() => {\n    loadCustomerLeads();\n  }, []);\n\n  const userString = sessionStorage.getItem(\"ubold_user\") || \"\";\n  const user = JSON.parse(userString);\n\n  const leadsFiltered =\n    user?.role === \"Admin\"\n      ? leads\n      : leads?.filter((x: any) => x.assignee === user?.username);\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <div className=\"page-title-box\">\n            <h4 className=\"page-title\">\n              Dashboard {user?.role === \"Admin\" && \" Admin\"}\n            </h4>\n          </div>\n        </Col>\n      </Row>\n      <Statistics leads={leadsFiltered} />\n      <Row>\n        <Col xl={6}>\n          {user?.role === \"Admin\" ? (\n            <AdminLeads leads={leads} />\n          ) : (\n            <UpcomingEventsTable />\n          )}\n        </Col>\n        <Col xl={6}>\n          <OpenLeads\n            openLeads={\n              leadsFiltered.filter((x: any) => x.leadStatus === \"Ongoing\") || []\n            }\n            loadCustomerLeads={loadCustomerLeads}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Dashboard1;\n"],"names":["props","_jsx","_Fragment","children","Card","className","_jsxs","Row","Col","classNames","CountUp","_objectSpread","duration","end","_ref","_leads$filter","_leads$filter2","_leads$filter3","leads","md","xl","StatisticsWidget","variant","description","stats","length","icon","filter","x","leadStatus","AssignUser","_props$row2","_props$row2$original","_props$options","FormInput","placeholder","onChange","e","_props$row","_e$target","onAssigneeChange","row","original","assignee","target","value","type","name","width","options","map","openLeads","loadCustomerLeads","_useState","useState","_useState2","_slicedToArray","setOptions","useEffect","getSalesUsers","then","response","concat","username","updatedRow","editApi","id","userString","sessionStorage","getItem","user","JSON","parse","role","style","lead","_lead$createdDate","_lead$createdDate$spl","email","phone","company","category","source","createdDate","split","upcomingEvents","setUpcomingEvents","fetchUpcomingEvents","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetch","config","sent","json","t0","console","error","stop","apply","arguments","event","title","Date","start","toLocaleString","assigneeMetrics","forEach","onGoingLeads","closedLeads","rejectedLeads","getAssigneeMetrics","Object","keys","_useState3","_useState4","setLeads","customerLeads","leadsFiltered","Statistics","AdminLeads","UpcomingEventsTable","OpenLeads"],"sourceRoot":""}