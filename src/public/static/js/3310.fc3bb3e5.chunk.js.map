{"version":3,"file":"static/js/3310.fc3bb3e5.chunk.js","mappings":"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","sources":["pages/apps/CRM/Customers/AddCustomer.tsx","pages/apps/CRM/Customers/helper.js","pages/apps/CRM/Customers/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport { VerticalForm, FormInput } from \"../../../../components/\";\n\ninterface AddCustomerProps {\n  isView: boolean;\n  data: any;\n  show: boolean;\n  onHide: () => void;\n  onSubmit: (value: any) => void;\n}\n\nconst AddCustomer = ({\n  isView,\n  data,\n  show,\n  onHide,\n  onSubmit,\n}: AddCustomerProps) => {\n  /*\n    form validation schema\n    */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      name: yup.string().required(\"Please enter name\"),\n      email: yup\n        .string()\n        .required(\"Please enter email\")\n        .email(\"Please enter valid email\"),\n      phone: yup\n        .string()\n        .required(\"Please enter phone\")\n        .matches(/^\\d{10}$/, \"Phone number is not valid\"),\n      location: yup.string().required(\"Please enter location\"),\n      statusItem: yup.string().required(\"Please select status\"),\n    })\n  );\n\n  const viewOrEdit = isView ? \"View\" : \"Edit\";\n  const title = data?.id ? viewOrEdit : \"Add\";\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={onHide}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header className=\"bg-light\" onHide={onHide} closeButton>\n          <Modal.Title className=\"m-0\">{title} Customers</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"p-4\">\n          <VerticalForm onSubmit={onSubmit} resolver={schemaResolver}>\n            <FormInput\n              label=\"Full Name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter full name\"\n              disabled={isView}\n              defaultValue={data?.name}\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Email address\"\n              type=\"email\"\n              name=\"email\"\n              disabled={isView}\n              defaultValue={data?.email}\n              placeholder=\"Enter email\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Phone\"\n              type=\"text\"\n              name=\"phone\"\n              disabled={isView}\n              defaultValue={data?.phone}\n              placeholder=\"Enter phone number\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Location\"\n              type=\"text\"\n              name=\"location\"\n              disabled={isView}\n              defaultValue={data?.location}\n              placeholder=\"Enter location\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Status\"\n              type=\"select\"\n              name=\"statusItem\"\n              disabled={isView}\n              defaultValue={data?.status}\n              placeholder=\"Enter Status\"\n              containerClass={\"mb-3\"}\n            >\n              <option value=\"Active\">Active</option>\n              <option value=\"Blocked\">Blocked</option>\n            </FormInput>\n            <div className=\"text-end\">\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                className=\"waves-effect waves-light me-1\"\n                disabled={isView}\n              >\n                Save\n              </Button>\n              <Button\n                variant=\"danger\"\n                className=\"waves-effect waves-light\"\n                onClick={onHide}\n              >\n                Continue\n              </Button>\n            </div>\n          </VerticalForm>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddCustomer;\n","// helper.js\n\nimport config from \"../../../../config\";\n\nconst BASE_URL = `${config.API_URL}/customer`;\n\nconst callApi = async (endpoint, method = \"GET\", data = null) => {\n  const url = `${BASE_URL}${endpoint}`;\n  const options = {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n  }\n\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"API Error:\", error.message);\n    throw new Error(\"Failed to fetch data from the server\");\n  }\n};\n\n// Get all customers\nconst getAllCustomers = async () => {\n  return callApi(\"/\");\n};\n\n// Create a new customer\nconst createCustomer = async (customerData) => {\n  customerData.status = customerData.statusItem;\n  return callApi(\"/\", \"POST\", customerData);\n};\n\n// Update an existing customer\nconst editCustomer = async (customerId, customerData) => {\n  customerData.status = customerData.statusItem;\n  return callApi(`/${customerId}`, \"PATCH\", customerData);\n};\n\n// Delete a customer\nconst deleteCustomer = async (customerId) => {\n  return callApi(`/${customerId}`, \"DELETE\");\n};\n\nexport { getAllCustomers, createCustomer, editCustomer, deleteCustomer };\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\nimport Table from \"../../../../components/Table\";\n\nimport AddCustomer from \"./AddCustomer\";\nimport {\n  createCustomer,\n  deleteCustomer,\n  editCustomer,\n  getAllCustomers,\n} from \"./helper\";\n\n// dummy data\n// import { customers } from \"./data\";\n\n/* name column render */\nconst NameColumn = ({ row }: { row: any }) => {\n  return (\n    <div className=\"table-user\">\n      <img src={row.original.avatar} alt=\"\" className=\"me-2 rounded-circle\" />\n      <Link to=\"#\" className=\"text-body fw-semibold\">\n        {row.original.name}\n      </Link>\n    </div>\n  );\n};\n\n/* status column render */\nconst StatusColumn = ({ row }: { row: any }) => {\n  return (\n    <React.Fragment>\n      <span\n        className={classNames(\"badge\", {\n          \"bg-soft-success text-success\": row.original.status === \"Active\",\n          \"bg-soft-danger text-danger\": row.original.status === \"Blocked\",\n        })}\n      >\n        {row.original.status}\n      </span>\n    </React.Fragment>\n  );\n};\n\n/* action column render */\nconst ActionColumn = ({\n  row,\n  onViewClick,\n  onEditClick,\n  onDeleteClick,\n}: any) => {\n  const handleView = () => onViewClick(row?.original);\n  const handleEdit = () => onEditClick(row?.original);\n  const handleDelete = () => onDeleteClick(row?.original);\n  return (\n    <React.Fragment>\n      <Link to=\"#\" className=\"action-icon\" onClick={handleView}>\n        {\" \"}\n        <i className=\"mdi mdi-eye\"></i>\n      </Link>\n      <Link to=\"#\" className=\"action-icon\" onClick={handleEdit}>\n        {\" \"}\n        <i className=\"mdi mdi-square-edit-outline\"></i>\n      </Link>\n      <Link to=\"#\" className=\"action-icon\" onClick={handleDelete}>\n        {\" \"}\n        <i className=\"mdi mdi-delete\"></i>\n      </Link>\n    </React.Fragment>\n  );\n};\n\n// main component\nconst Customers = () => {\n  /*\n   *   modal handeling\n   */\n  const [show, setShow] = useState<boolean>(false);\n  const onCloseModal = () => {\n    setIsView(false);\n    setShow(false);\n    setSelectedData({});\n  };\n  const onOpenModal = () => setShow(true);\n\n  const [customers, setCustomers] = useState<any>([]);\n  const [isView, setIsView] = useState(false);\n  const [selectedData, setSelectedData] = useState<any>({});\n\n  const loadCustomers = () =>\n    getAllCustomers().then((response) => setCustomers(response));\n\n  useEffect(() => {\n    loadCustomers();\n  }, []);\n\n  /*\n    handle form submission\n    */\n  const onSubmit = (data: any) => {\n    if (selectedData?.id) {\n      editCustomer(selectedData?.id, data).then(() => {\n        onCloseModal();\n        setSelectedData({});\n        setIsView(false);\n        loadCustomers();\n      });\n    } else {\n      createCustomer(data).then(() => {\n        onCloseModal();\n        setSelectedData({});\n        setIsView(false);\n        loadCustomers();\n      });\n    }\n  };\n\n  const onViewClick = (row: any) => {\n    setShow(true);\n    setSelectedData(row);\n    setIsView(true);\n  };\n\n  const onEditClick = (row: any) => {\n    setShow(true);\n    setSelectedData(row);\n    setIsView(false);\n  };\n\n  const onDeleteClick = (row: any) => {\n    deleteCustomer(row?.id).then(() => loadCustomers());\n  };\n\n  const columns = [\n    {\n      Header: \"Customer\",\n      accessor: \"name\",\n      sort: true,\n      Cell: NameColumn,\n      classes: \"table-user\",\n    },\n    {\n      Header: \"Phone\",\n      accessor: \"phone\",\n      sort: false,\n    },\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n      sort: false,\n    },\n    {\n      Header: \"Location\",\n      accessor: \"location\",\n      sort: false,\n    },\n    {\n      Header: \"Create Date\",\n      accessor: \"created_on\",\n      sort: false,\n    },\n    {\n      Header: \"Status\",\n      accessor: \"status\",\n      sort: false,\n      Cell: StatusColumn,\n    },\n    {\n      Header: \"Action\",\n      accessor: \"action\",\n      sort: false,\n      classes: \"table-action\",\n      Cell: (cellProps: JSX.IntrinsicAttributes) => (\n        <ActionColumn\n          {...cellProps}\n          onViewClick={onViewClick}\n          onEditClick={onEditClick}\n          onDeleteClick={onDeleteClick}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"CRM\", path: \"/apps/crm/customers\" },\n          { label: \"Customers\", path: \"/apps/crm/customers\", active: true },\n        ]}\n        title={\"Customers\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <Row className=\"mb-2\">\n                <Col sm={4}>\n                  <Button\n                    variant=\"danger\"\n                    className=\"waves-effect waves-light\"\n                    onClick={onOpenModal}\n                  >\n                    <i className=\"mdi mdi-plus-circle me-1\"></i> Add Customers\n                  </Button>\n                </Col>\n\n                <Col sm={8}>\n                  <div className=\"text-sm-end mt-2 mt-sm-0\">\n                    <Button className=\"btn btn-success mb-2 me-1\">\n                      <i className=\"mdi mdi-cog\"></i>\n                    </Button>\n\n                    <Button className=\"btn btn-light mb-2 me-1\">Import</Button>\n\n                    <Button className=\"btn btn-light mb-2\">Export</Button>\n                  </div>\n                </Col>\n              </Row>\n\n              <Table\n                columns={columns}\n                data={customers}\n                pageSize={12}\n                isSortable={true}\n                pagination={true}\n                isSelectable={true}\n                tableClass=\"table-nowrap table-striped\"\n              />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {/* add customer modal */}\n      <AddCustomer\n        data={selectedData}\n        isView={isView}\n        show={show}\n        onHide={onCloseModal}\n        onSubmit={onSubmit}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Customers;\n"],"names":["_ref","isView","data","show","onHide","onSubmit","schemaResolver","yupResolver","yup","shape","name","required","email","phone","matches","location","statusItem","viewOrEdit","title","id","_jsx","_Fragment","children","_jsxs","Modal","centered","className","closeButton","VerticalForm","resolver","FormInput","label","type","placeholder","disabled","defaultValue","containerClass","status","value","Button","variant","onClick","BASE_URL","concat","config","callApi","_asyncToGenerator","_regeneratorRuntime","_callee","endpoint","method","url","options","response","result","_args","arguments","_context","prev","next","length","undefined","headers","body","JSON","stringify","fetch","sent","json","abrupt","t0","console","error","message","Error","stop","_x","apply","getAllCustomers","_ref2","_callee2","_context2","createCustomer","_ref3","_callee3","customerData","_context3","_x2","editCustomer","_ref4","_callee4","customerId","_context4","_x3","_x4","deleteCustomer","_ref5","_callee5","_context5","_x5","NameColumn","row","src","original","avatar","alt","Link","to","StatusColumn","React","classNames","ActionColumn","onViewClick","onEditClick","onDeleteClick","_useState","useState","_useState2","_slicedToArray","setShow","onCloseModal","setIsView","setSelectedData","_useState3","_useState4","customers","setCustomers","_useState5","_useState6","_useState7","_useState8","selectedData","loadCustomers","then","useEffect","columns","Header","accessor","sort","Cell","classes","cellProps","_objectSpread","PageTitle","breadCrumbItems","path","active","Row","Col","Card","sm","Table","pageSize","isSortable","pagination","isSelectable","tableClass","AddCustomer"],"sourceRoot":""}