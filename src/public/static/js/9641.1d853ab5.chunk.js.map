{"version":3,"file":"static/js/9641.1d853ab5.chunk.js","mappings":"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","sources":["pages/apps/CRM/Leads/AddLeads.tsx","pages/apps/CRM/Leads/helper.js","pages/apps/CRM/Leads/CompanyDetails.tsx","pages/apps/CRM/Leads/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport { VerticalForm, FormInput } from \"../../../../components/\";\n\ninterface AddLeadsProps {\n  show: boolean;\n  selectedInfo: any;\n  onHide: () => void;\n  onSubmit: (value: any) => void;\n}\n\nconst AddLeads = ({ selectedInfo, show, onHide, onSubmit }: AddLeadsProps) => {\n  /*\n    form validation schema\n    */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      name: yup.string().required(\"Please enter name\"),\n      category: yup.string().required(\"Please enter category\"),\n      location: yup.string().required(\"Please enter location\"),\n      statusItem: yup.string().required(\"Please enter status\"),\n    })\n  );\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={onHide}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header className=\"bg-light\" onHide={onHide} closeButton>\n          <Modal.Title className=\"m-0\">\n            {selectedInfo?.id ? \"Edit\" : \"Add\"} Leads\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"p-4\">\n          <VerticalForm onSubmit={onSubmit} resolver={schemaResolver}>\n            <FormInput\n              label=\"Company Name\"\n              type=\"text\"\n              name=\"name\"\n              defaultValue={selectedInfo?.name}\n              placeholder=\"Enter company name\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Category\"\n              type=\"text\"\n              name=\"category\"\n              defaultValue={selectedInfo?.category}\n              placeholder=\"Enter category\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Location\"\n              type=\"text\"\n              name=\"location\"\n              defaultValue={selectedInfo?.location}\n              placeholder=\"Enter Location\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Date\"\n              type=\"date\"\n              name=\"date\"\n              defaultValue={selectedInfo?.date}\n              placeholder=\"Enter Date\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Status\"\n              type=\"select\"\n              name=\"statusItem\"\n              defaultValue={selectedInfo?.status || \"\"}\n              placeholder=\"Enter Status\"\n              containerClass={\"mb-3\"}\n            >\n              <option value={\"Hot\"}>Hot</option>\n              <option value={\"Cold\"}>Cold</option>\n              <option value={\"Lost\"}>Lost</option>\n              <option value={\"In-progress\"}>In-progress</option>\n              <option value={\"Won\"}>Won</option>\n            </FormInput>\n\n            <div className=\"text-end\">\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                className=\"waves-effect waves-light me-1\"\n              >\n                Save\n              </Button>\n              <Button\n                variant=\"danger\"\n                className=\"waves-effect waves-light\"\n                onClick={onHide}\n              >\n                Continue\n              </Button>\n            </div>\n          </VerticalForm>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddLeads;\n","// helper.js\n\nimport config from \"../../../../config\";\n\nconst BASE_URL = `${config.API_URL}/leads`;\n\nasync function fetchLeads() {\n  const endpoint = \"/\";\n  const method = \"GET\";\n  return fetchData(endpoint, method);\n}\n\nasync function createLead(data) {\n  const endpoint = \"/\";\n  const method = \"POST\";\n  data.status = data?.statusItem;\n  return fetchData(endpoint, method, data);\n}\n\nasync function updateLeadById(id, data) {\n  const endpoint = `/${id}`;\n  const method = \"PUT\";\n  data.status = data?.statusItem;\n  return fetchData(endpoint, method, data);\n}\n\nasync function deleteLeadById(id) {\n  const endpoint = `/${id}`;\n  const method = \"DELETE\";\n  return fetchData(endpoint, method);\n}\n\nasync function fetchData(endpoint, method, data = null) {\n  const url = `${BASE_URL}${endpoint}`;\n  const options = {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: data ? JSON.stringify(data) : null,\n  };\n\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"Error:\", error);\n    throw error;\n  }\n}\n\nexport { fetchLeads, createLead, updateLeadById, deleteLeadById };\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport AddLeads from \"./AddLeads\";\nimport { createLead, deleteLeadById, updateLeadById } from \"./helper\";\n\ninterface CompanyInfo {\n  id: number;\n  logo: any;\n  name: string;\n  location: string;\n  category: string;\n  date: string;\n  status: string;\n}\n\ninterface CompanyDetailsProps {\n  companyInfo: CompanyInfo[];\n  loadLeads: () => any;\n}\nconst CompanyDetails = (props: CompanyDetailsProps) => {\n  const [companyInfo, setCompanyInfo] = useState<Array<CompanyInfo>>(\n    props.companyInfo\n  );\n  const [show, setShow] = useState<boolean>(false);\n  const [selectedInfo, setSelectedInfo] = useState<any>({});\n\n  useEffect(() => setCompanyInfo(props.companyInfo), [props.companyInfo]);\n\n  /*\n   * search on data\n   */\n  const onSearchData = (value: string) => {\n    if (value === \"\") setCompanyInfo(props.companyInfo);\n    else {\n      var modifiedProducts = props.companyInfo;\n      modifiedProducts = modifiedProducts.filter(\n        (item) =>\n          item.name.toLowerCase().includes(value) ||\n          item.location.toLowerCase().includes(value) ||\n          item.category.toLowerCase().includes(value)\n      );\n      setCompanyInfo(modifiedProducts);\n    }\n  };\n\n  /*\n   *   modal handeling\n   */\n  const onCloseModal = () => {\n    setSelectedInfo({});\n    setShow(false);\n  };\n  const onOpenModal = () => setShow(true);\n\n  /*\n    handle form submission\n    */\n  const onHandleSubmit = (formdata: any) => {\n    if (selectedInfo?.id) {\n      updateLeadById(selectedInfo?.id, formdata).then(() => {\n        onCloseModal();\n        props.loadLeads();\n      });\n    } else {\n      createLead(formdata).then(() => {\n        onCloseModal();\n        props.loadLeads();\n      });\n    }\n  };\n\n  const onEditClick = (info: any) => {\n    setShow(true);\n    setSelectedInfo(info);\n  };\n\n  const onDeleteClick = (info: any) => {\n    deleteLeadById(info?.id).then(() => {\n      props.loadLeads();\n    });\n  };\n\n  return (\n    <>\n      <Card className=\"mb-2\">\n        <Card.Body>\n          <Row className=\"justify-content-between\">\n            <Col className=\"col-auto\">\n              <form className=\"d-flex flex-wrap align-items-center\">\n                <label htmlFor=\"inputPassword2\" className=\"visually-hidden\">\n                  Search\n                </label>\n                <div className=\"me-3\">\n                  <input\n                    type=\"search\"\n                    className=\"form-control my-1 my-md-0\"\n                    id=\"inputPassword2\"\n                    placeholder=\"Search...\"\n                    onChange={(e: any) => onSearchData(e.target.value)}\n                  />\n                </div>\n              </form>\n            </Col>\n            <Col md={4}>\n              <div className=\"text-md-end mt-3 mt-md-0\">\n                <Button\n                  variant=\"success\"\n                  className=\"waves-effect waves-light me-1\"\n                >\n                  <i className=\"mdi mdi-cog\"></i>\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  className=\"waves-effect waves-light\"\n                  onClick={onOpenModal}\n                >\n                  <i className=\"mdi mdi-plus-circle me-1\"></i> Add New\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n\n      {(companyInfo || []).map((item, index) => {\n        return (\n          <Card key={index} className=\"mb-2\">\n            <Card.Body>\n              <Row className=\"align-items-center\">\n                <Col sm={4}>\n                  <div className=\"d-flex align-items-start\">\n                    {item?.logo && (\n                      <img\n                        className=\"d-flex align-self-center me-3 rounded-circle\"\n                        src={item.logo}\n                        alt=\"\"\n                        height=\"64\"\n                      />\n                    )}\n                    <div className=\"w-100\">\n                      <h4 className=\"mt-0 mb-2 font-16\">{item.name}</h4>\n                      <p className=\"mb-1\">\n                        <b>Location:</b> {item.location}\n                      </p>\n                      <p className=\"mb-0\">\n                        <b>Category:</b> {item.category}\n                      </p>\n                    </div>\n                  </div>\n                </Col>\n                <Col sm={2}>\n                  <div className=\"text-center my-3 my-sm-0\">\n                    <p className=\"mb-0 text-muted\">{item.date}</p>\n                  </div>\n                </Col>\n                <Col sm={4}>\n                  <div className=\"text-center button-list\">\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-xs btn-primary waves-effect waves-light\"\n                    >\n                      Assign\n                    </Link>\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-xs btn-primary waves-effect waves-light\"\n                    >\n                      Call\n                    </Link>\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-xs btn-primary waves-effect waves-light\"\n                    >\n                      Email\n                    </Link>\n                  </div>\n                </Col>\n                <Col sm={2}>\n                  <div className=\"text-sm-end\">\n                    <Link\n                      to=\"#\"\n                      className=\"action-icon\"\n                      onClick={() => onEditClick(item)}\n                    >\n                      <i className=\"mdi mdi-square-edit-outline\"></i>\n                    </Link>\n                    <Link\n                      to=\"#\"\n                      className=\"action-icon\"\n                      onClick={() => onDeleteClick(item)}\n                    >\n                      <i className=\"mdi mdi-delete\"></i>\n                    </Link>\n                  </div>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        );\n      })}\n\n      <div className=\"text-center my-4\">\n        <Link to=\"#\" className=\"text-danger\">\n          <i className=\"mdi mdi-spin mdi-loading me-1\"></i> Load more{\" \"}\n        </Link>\n      </div>\n\n      {/* add/edit leads modal */}\n      <AddLeads\n        selectedInfo={selectedInfo}\n        show={show}\n        onHide={onCloseModal}\n        onSubmit={onHandleSubmit}\n      />\n    </>\n  );\n};\n\nexport default CompanyDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\n\nimport CompanyDetails from \"./CompanyDetails\";\n// import StaticsChart from \"./StaticsChart\";\n\n// dummy data\nimport { fetchLeads } from \"./helper\";\n\nconst Leads = () => {\n  const [leads, setLeads] = useState<any>([]);\n\n  const loadLeads = () => fetchLeads().then(setLeads);\n\n  useEffect(() => {\n    loadLeads();\n  }, []);\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"CRM\", path: \"/apps/crm/leads\" },\n          { label: \"Leads\", path: \"/apps/crm/leads\", active: true },\n        ]}\n        title={\"Leads\"}\n      />\n\n      <Row>\n        <Col lg={{ span: 12, order: 1 }} xs={{ span: 12, order: 2 }}>\n          <CompanyDetails companyInfo={leads} loadLeads={loadLeads} />\n        </Col>\n        {/* <Col lg={{ span: 4, order: 2 }} xs={{ span: 12, order: 1 }}>\n          <StaticsChart />\n        </Col> */}\n      </Row>\n    </>\n  );\n};\n\nexport default Leads;\n"],"names":["_ref","selectedInfo","show","onHide","onSubmit","schemaResolver","yupResolver","yup","shape","name","required","category","location","statusItem","_jsx","_Fragment","children","_jsxs","Modal","centered","className","closeButton","id","VerticalForm","resolver","FormInput","label","type","defaultValue","placeholder","containerClass","date","status","value","Button","variant","onClick","BASE_URL","concat","config","_fetchLeads","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","fetchData","stop","apply","arguments","_createLead","_callee2","data","_context2","_updateLeadById","_callee3","endpoint","_context3","_deleteLeadById","_callee4","_context4","_x5","_x6","_fetchData","_callee5","method","url","options","response","result","_args5","_context5","length","undefined","headers","body","JSON","stringify","fetch","sent","json","t0","console","error","props","_useState","useState","companyInfo","_useState2","_slicedToArray","setCompanyInfo","_useState3","_useState4","setShow","_useState5","_useState6","setSelectedInfo","useEffect","onCloseModal","onDeleteClick","info","_x4","deleteLeadById","then","loadLeads","Card","Row","Col","htmlFor","onChange","e","modifiedProducts","filter","item","toLowerCase","includes","onSearchData","target","md","map","index","sm","logo","src","alt","height","Link","to","AddLeads","formdata","_x2","_x3","updateLeadById","_x","createLead","leads","setLeads","fetchLeads","PageTitle","breadCrumbItems","path","active","title","lg","span","order","xs","CompanyDetails"],"sourceRoot":""}