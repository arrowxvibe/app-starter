{"version":3,"file":"static/js/7404.4ee7affe.chunk.js","mappings":"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","sources":["components/FileUploader.tsx","pages/apps/Ecommerce/ProductEdit.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport Dropzone from \"react-dropzone\";\n\ninterface FileType extends File {\n  preview?: string;\n  formattedSize?: string;\n}\n\ninterface FileUploaderProps {\n  onFileUpload?: (files: FileType[]) => void;\n  showPreview?: boolean;\n}\n\nconst FileUploader = (props: FileUploaderProps) => {\n  const [selectedFiles, setSelectedFiles] = useState<FileType[]>([]);\n\n  /**\n   * Handled the accepted files and shows the preview\n   */\n  const handleAcceptedFiles = (files: FileType[]) => {\n    var allFiles = files;\n\n    if (props.showPreview) {\n      (files || []).map((file) =>\n        Object.assign(file, {\n          preview:\n            file[\"type\"].split(\"/\")[0] === \"image\"\n              ? URL.createObjectURL(file)\n              : null,\n          formattedSize: formatBytes(file.size),\n        })\n      );\n      allFiles = [...selectedFiles];\n      allFiles.push(...files);\n      setSelectedFiles(allFiles);\n    }\n\n    if (props.onFileUpload) props.onFileUpload(allFiles);\n  };\n\n  /**\n   * Formats the size\n   */\n  const formatBytes = (bytes: number, decimals: number = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n  };\n\n  /*\n   * Removes the selected file\n   */\n  const removeFile = (fileIndex: number) => {\n    const newFiles = [...selectedFiles];\n    newFiles.splice(fileIndex, 1);\n    setSelectedFiles(newFiles);\n    if (props.onFileUpload) props.onFileUpload(newFiles);\n  };\n\n  return (\n    <>\n      <Dropzone\n        {...props}\n        onDrop={(acceptedFiles) => handleAcceptedFiles(acceptedFiles)}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div className=\"dropzone\">\n            <div className=\"dz-message needsclick\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <i className=\"h3 text-muted dripicons-cloud-upload\"></i>\n              <h4>Drop files here or click to upload.</h4>\n              <span className=\"text-muted font-13\">\n                (This is just a demo dropzone. Selected files are{\" \"}\n                <strong>not</strong> actually uploaded.)\n              </span>\n            </div>\n          </div>\n        )}\n      </Dropzone>\n\n      {props.showPreview && (\n        <div className=\"dropzone-previews mt-3\" id=\"uploadPreviewTemplate\">\n          {(selectedFiles || []).map((f, i) => {\n            return (\n              <Card className=\"mt-1 mb-0 shadow-none border\" key={i + \"-file\"}>\n                <div className=\"p-2\">\n                  <Row className=\"align-items-center\">\n                    {f.preview && (\n                      <Col className=\"col-auto\">\n                        <img\n                          data-dz-thumbnail=\"\"\n                          className=\"avatar-sm rounded bg-light\"\n                          alt={f.name}\n                          src={f.preview}\n                        />\n                      </Col>\n                    )}\n                    {!f.preview && (\n                      <Col className=\"col-auto\">\n                        <div className=\"avatar-sm\">\n                          <span className=\"avatar-title bg-primary rounded\">\n                            {f.type.split(\"/\")[0]}\n                          </span>\n                        </div>\n                      </Col>\n                    )}\n                    <Col className=\"ps-0\">\n                      <Link to=\"#\" className=\"text-muted fw-bold\">\n                        {f.name}\n                      </Link>\n                      <p className=\"mb-0\">\n                        <strong>{f.formattedSize}</strong>\n                      </p>\n                    </Col>\n                    <Col className=\"text-end\">\n                      <Link\n                        to=\"#\"\n                        className=\"btn btn-link btn-lg text-muted shadow-none\"\n                      >\n                        <i\n                          className=\"dripicons-cross\"\n                          onClick={() => removeFile(i)}\n                        ></i>\n                      </Link>\n                    </Col>\n                  </Row>\n                </div>\n              </Card>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nFileUploader.defaultProps = {\n  showPreview: true,\n};\n\nexport default FileUploader;\n","import React, { useState } from \"react\";\nimport { Row, Col, Card, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Select from \"react-select\";\nimport { Editor } from \"react-draft-wysiwyg\";\n\n// styles\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\nimport FileUploader from \"../../../components/FileUploader\";\nimport { FormInput } from \"../../../components/\";\n\nconst ProductEdit = () => {\n  const [editorState, setEditorState] = useState<any>();\n  const categories = [\n    {\n      label: \"Shopping\",\n      options: [\n        { value: \"SH1\", label: \"Shopping 1\" },\n        { value: \"SH2\", label: \"Shopping 2\" },\n        { value: \"SH3\", label: \"Shopping 3\" },\n      ],\n    },\n    {\n      label: \"CRM\",\n      options: [\n        { value: \"CRM1\", label: \"Crm 1\" },\n        { value: \"CRM2\", label: \"Crm 2\" },\n        { value: \"CRM3\", label: \"Crm 3\" },\n        { value: \"CRM4\", label: \"Crm 4\" },\n      ],\n    },\n    {\n      label: \"eCommerce\",\n      options: [\n        { value: \"E1\", label: \"eCommerce 1\" },\n        { value: \"E2\", label: \"eCommerce 2\" },\n        { value: \"E3\", label: \"eCommerce 3\" },\n        { value: \"E4\", label: \"eCommerce 4\" },\n      ],\n    },\n  ];\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      name: yup.string().required(\"Please enter Project Name\"),\n      reference: yup.string().required(\"Please enter Project Name\"),\n      summary: yup.string().required(\"Please enter Project Name\"),\n      price: yup.string().required(\"Please enter Project Name\"),\n      comment: yup.string().required(\"Please enter Project Name\"),\n      metatitle: yup.string().required(\"Please enter Project Name\"),\n      metakeywords: yup.string().required(\"Please enter Project Name\"),\n      metadescription: yup.string().required(\"Please enter Project Name\"),\n    })\n  );\n\n  /*\n   * form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n  } = methods;\n\n  /**\n   * On editor body change\n   */\n  const onEditorStateChange = (editorStates: any) => {\n    setEditorState(editorStates);\n  };\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Ecommerce\", path: \"/apps/ecommerce/details\" },\n          {\n            label: \"Add / Edit Product\",\n            path: \"/apps/ecommerce/details\",\n            active: true,\n          },\n        ]}\n        title={\"Add / Edit Product\"}\n      />\n\n      <form onSubmit={handleSubmit(() => {})}>\n        <Row>\n          <Col lg={6}>\n            <Card>\n              <Card.Body>\n                <h5 className=\"text-uppercase bg-light p-2 mt-0 mb-3\">\n                  General\n                </h5>\n                <FormInput\n                  name=\"name\"\n                  label=\"Product Name\"\n                  placeholder=\"e.g : Apple iMac\"\n                  containerClass={\"mb-3\"}\n                  register={register}\n                  key=\"productname\"\n                  errors={errors}\n                  control={control}\n                />\n                <FormInput\n                  name=\"reference\"\n                  label=\"Reference\"\n                  placeholder=\"e.g : Apple iMac\"\n                  containerClass={\"mb-3\"}\n                  register={register}\n                  key=\"reference\"\n                  errors={errors}\n                  control={control}\n                />\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Product Description</Form.Label>\n                  <Editor\n                    editorState={editorState}\n                    toolbarClassName=\"toolbarClassName\"\n                    wrapperClassName=\"wrapperClassName border border-1\"\n                    editorClassName=\"editorClassName px-2\"\n                    onEditorStateChange={onEditorStateChange}\n                    editorStyle={{ minHeight: \"150px\" }}\n                  />\n                </Form.Group>\n\n                <FormInput\n                  type=\"textarea\"\n                  rows=\"3\"\n                  name=\"summary\"\n                  label=\"Product Summary\"\n                  placeholder=\"Please enter summary\"\n                  containerClass={\"mb-3\"}\n                  register={register}\n                  key=\"summary\"\n                  errors={errors}\n                  control={control}\n                />\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Categories</Form.Label>\n                  <Select\n                    className=\"react-select react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    options={categories}\n                    id=\"product-category\"\n                  />\n                </Form.Group>\n\n                <FormInput\n                  name=\"price\"\n                  label=\"Price\"\n                  placeholder=\"Enter amount\"\n                  containerClass={\"mb-3\"}\n                  register={register}\n                  key=\"price\"\n                  errors={errors}\n                  control={control}\n                />\n\n                <div className=\"mb-3\">\n                  <label className=\"mb-2\">Status</label>\n                  <div className=\"d-flex flex-wrap\">\n                    <FormInput\n                      type=\"radio\"\n                      name=\"radioInline\"\n                      label=\"Online\"\n                      value=\"option1\"\n                      containerClass={\"me-2\"}\n                      defaultChecked\n                      register={register}\n                      key=\"inlineRadio1\"\n                      errors={errors}\n                      control={control}\n                    />\n                    <FormInput\n                      type=\"radio\"\n                      name=\"radioInline\"\n                      label=\"Offline\"\n                      value=\"option2\"\n                      containerClass={\"me-2\"}\n                      register={register}\n                      key=\"inlineRadio2\"\n                      errors={errors}\n                      control={control}\n                    />\n                    <FormInput\n                      type=\"radio\"\n                      name=\"radioInline\"\n                      label=\"Draft\"\n                      value=\"option3\"\n                      containerClass={\"me-2\"}\n                      register={register}\n                      key=\"inlineRadio3\"\n                      errors={errors}\n                      control={control}\n                    />\n                  </div>\n                </div>\n\n                <FormInput\n                  type=\"textarea\"\n                  rows=\"3\"\n                  name=\"comment\"\n                  label=\"Comment\"\n                  placeholder=\"Please enter comment\"\n                  containerClass={\"mb-3\"}\n                  register={register}\n                  key=\"comment\"\n                  errors={errors}\n                  control={control}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg={6}>\n            <Card>\n              <Card.Body>\n                <h5 className=\"text-uppercase mt-0 mb-3 bg-light p-2\">\n                  Product Images\n                </h5>\n                <FileUploader />\n              </Card.Body>\n            </Card>\n\n            <Card>\n              <Card.Body>\n                <h5 className=\"text-uppercase mt-0 mb-3 bg-light p-2\">\n                  Meta Data\n                </h5>\n                <FormInput\n                  name=\"metatitle\"\n                  label=\"Meta title\"\n                  placeholder=\"Enter title\"\n                  containerClass={\"mb-3\"}\n                  register={register}\n                  key=\"metatitle\"\n                  errors={errors}\n                  control={control}\n                />\n                <FormInput\n                  name=\"metakeywords\"\n                  label=\"Meta Keywords\"\n                  placeholder=\"Enter keywords\"\n                  containerClass={\"mb-3\"}\n                  register={register}\n                  key=\"metakeywords\"\n                  errors={errors}\n                  control={control}\n                />\n                <FormInput\n                  type=\"textarea\"\n                  rows=\"5\"\n                  name=\"metadescription\"\n                  label=\"Meta Description\"\n                  placeholder=\"Please enter description\"\n                  containerClass={\"mb-3\"}\n                  register={register}\n                  key=\"metadescription\"\n                  errors={errors}\n                  control={control}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <div className=\"text-center mb-3\">\n              <button\n                type=\"button\"\n                className=\"btn w-sm btn-light waves-effect me-1\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                className=\"btn w-sm btn-success waves-effect waves-light me-1\"\n              >\n                Save\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn w-sm btn-danger waves-effect waves-light me-1\"\n              >\n                Delete\n              </button>\n            </div>\n          </Col>\n        </Row>\n      </form>\n    </>\n  );\n};\n\nexport default ProductEdit;\n"],"names":["FileUploader","props","_useState","useState","_useState2","_slicedToArray","selectedFiles","setSelectedFiles","formatBytes","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","log","parseFloat","pow","toFixed","_jsxs","_Fragment","children","_jsx","Dropzone","_objectSpread","onDrop","acceptedFiles","files","_allFiles","allFiles","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","size","_toConsumableArray","push","apply","onFileUpload","handleAcceptedFiles","_ref","getRootProps","getInputProps","className","id","f","Card","Row","Col","alt","name","src","type","Link","to","onClick","fileIndex","newFiles","splice","removeFile","defaultProps","editorState","setEditorState","schemaResolver","yupResolver","yup","shape","required","reference","summary","price","comment","metatitle","metakeywords","metadescription","methods","useForm","resolver","handleSubmit","register","control","errors","formState","PageTitle","breadCrumbItems","label","path","active","title","onSubmit","lg","FormInput","placeholder","containerClass","Form","Editor","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","editorStates","editorStyle","minHeight","rows","Select","classNamePrefix","options","value","defaultChecked"],"sourceRoot":""}