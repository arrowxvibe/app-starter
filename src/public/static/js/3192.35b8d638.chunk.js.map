{"version":3,"file":"static/js/3192.35b8d638.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","pages/apps/Tasks/Board/Task.tsx","pages/apps/Tasks/Board/data.tsx","pages/apps/Tasks/Board/index.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface HyperDatepickerProps {\n  value: Date;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst HyperDatepicker = (props: HyperDatepickerProps) => {\n  // handle custom input\n  // ;\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    ) : (\n      <DatepickerInputWithAddon\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        customInput={input}\n        timeIntervals={props.tI}\n        selected={props.value}\n        value={props.value.toDateString()}\n        onChange={(date) => props.onChange(date)}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default HyperDatepicker;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// dummy data\nimport { TaskTypes } from \"./data\";\n\ninterface TaskItemProps {\n  task: TaskTypes;\n}\n\n// task item\nconst TaskItem = (props: TaskItemProps) => {\n  const task = props.task || {};\n\n  return (\n    <>\n      <span\n        className={classNames(\"badge\", \"float-end\", {\n          \"bg-soft-danger text-danger\": task.priority === \"High\",\n          \"bg-soft-secondary text-secondary\": task.priority === \"Medium\",\n          \"bg-soft-success text-success\": task.priority === \"Low\",\n        })}\n      >\n        {task.priority}\n      </span>\n\n      <h5 className=\"mt-0\">\n        <Link to=\"#\" className=\"text-dark\">\n          {task.title}\n        </Link>\n      </h5>\n\n      <div className=\"form-check float-end ps-0\">\n        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" />\n      </div>\n\n      <p>{task.description}</p>\n\n      <div className=\"clearfix\"></div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <p className=\"font-13 mt-2 mb-0\">\n            <i className=\"mdi mdi-calendar\"></i> {task.dueDate}\n          </p>\n        </div>\n        <div className=\"col-auto\">\n          <div className=\"text-end\">\n            {(task.userAvatar || []).map((avatar, index) => {\n              return (\n                <Link key={index} to=\"#\" className=\"text-muted\">\n                  <img\n                    src={avatar}\n                    alt=\"\"\n                    className=\"avatar-sm img-thumbnail rounded-circle\"\n                  />\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TaskItem;\n","import avatar1 from \"../../../../assets/images/users/user-1.jpg\";\nimport avatar2 from \"../../../../assets/images/users/user-2.jpg\";\nimport avatar3 from \"../../../../assets/images/users/user-3.jpg\";\nimport avatar5 from \"../../../../assets/images/users/user-5.jpg\";\nimport avatar6 from \"../../../../assets/images/users/user-6.jpg\";\nimport avatar7 from \"../../../../assets/images/users/user-7.jpg\";\nimport avatar8 from \"../../../../assets/images/users/user-8.jpg\";\nimport avatar9 from \"../../../../assets/images/users/user-9.jpg\";\nimport avatar10 from \"../../../../assets/images/users/user-10.jpg\";\n\nexport interface TaskTypes {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n  priority: string;\n  userAvatar: string[];\n  dueDate: string;\n}\n\nconst tasks: TaskTypes[] = [\n  {\n    id: 1,\n    title: \"Arita v3.0 - Redesign\",\n    description:\n      \"There are many variations of passages of Lorem Ipsum available.\",\n    status: \"Upcoming\",\n    priority: \"High\",\n    userAvatar: [avatar1, avatar3],\n    dueDate: \"Jul 18, 2019\",\n  },\n  {\n    id: 2,\n    title: \"Minton v3.0 - Redesign\",\n    description: \"Many desktop publishing packages and web page.\",\n    status: \"Inprogress\",\n    priority: \"Low\",\n    userAvatar: [avatar2],\n    dueDate: \"Jul 20, 2019\",\n  },\n  {\n    id: 3,\n    title: \"Arita v2.1 - Angular and Django\",\n    description: \"If you are going to use a passage of Lorem Ipsum.\",\n    status: \"Completed\",\n    priority: \"Low\",\n    userAvatar: [avatar5],\n    dueDate: \"Jul 21, 2019\",\n  },\n  {\n    id: 4,\n    title: \"Arita v2.1 - React, Webpack\",\n    description:\n      \"It has roots in a piece of classical Latin literature from 45 BC.\",\n    status: \"Completed\",\n    priority: \"High\",\n    userAvatar: [avatar6, avatar7],\n    dueDate: \"Jul 22, 2019\",\n  },\n  {\n    id: 5,\n    title: \"Arita 2.2 - Vue.Js and Laravel\",\n    description:\n      \"There are many variations of passages of Lorem Ipsum available.\",\n    status: \"Upcoming\",\n    priority: \"Low\",\n    userAvatar: [avatar8],\n    dueDate: \"Jul 18, 2019\",\n  },\n  {\n    id: 6,\n    title: \"Arita 2.3 - Rails, NodeJs, Mean\",\n    description:\n      \"All the Lorem Ipsum generators on the Internet tend to repeat predefined.\",\n    status: \"Upcoming\",\n    priority: \"Medium\",\n    userAvatar: [avatar9, avatar10],\n    dueDate: \"Jul 21, 2019\",\n  },\n  {\n    id: 7,\n    title: \"Arita - Landing page and UI Kit\",\n    description: \"Your awesome text goes here. Your awesome text goes here.\",\n    status: \"Completed\",\n    priority: \"Medium\",\n    userAvatar: [avatar1, avatar3],\n    dueDate: \"Jul 10, 2019\",\n  },\n  {\n    id: 8,\n    title: \"Arita 3.0 - Scoping\",\n    description:\n      \"A handful of model sentence structures, to generate Lorem Ipsum which looks reasonable.\",\n    status: \"Inprogress\",\n    priority: \"High\",\n    userAvatar: [avatar2],\n    dueDate: \"Jul 24, 2019\",\n  },\n  {\n    id: 9,\n    title: \"Shreyu 1.0 - Angular\",\n    description:\n      \"There are many variations of passages of Lorem Ipsum available.\",\n    status: \"Upcoming\",\n    priority: \"Low\",\n    userAvatar: [avatar2],\n    dueDate: \"Aug 18, 2019\",\n  },\n  {\n    id: 10,\n    title: \"Shreyu 1.0 - React\",\n    description:\n      \"All the Lorem Ipsum generators on the Internet tend to repeat predefined.\",\n    status: \"Inprogress\",\n    priority: \"High\",\n    userAvatar: [avatar8],\n    dueDate: \"Aug 18, 2019\",\n  },\n  {\n    id: 11,\n    title: \"Minton 1.0 - Angular\",\n    description:\n      \"There are many variations of passages of Lorem Ipsum available.\",\n    status: \"Completed\",\n    priority: \"Low\",\n    userAvatar: [avatar2],\n    dueDate: \"Aug 18, 2019\",\n  },\n];\n\nexport { tasks };\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, Dropdown, Modal, Button } from \"react-bootstrap\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\nimport HyperDatepicker from \"../../../../components/Datepicker\";\nimport { FormInput } from \"../../../../components/\";\n\nimport TaskItem from \"./Task\";\n\n// dummy data\nimport { tasks, TaskTypes } from \"./data\";\n\nimport defaultAvatar from \"../../../../assets/images/users/user-1.jpg\";\n\ninterface StateType {\n  upcomingTasks: TaskTypes[];\n  inprogressTasks: TaskTypes[];\n  completedTasks: TaskTypes[];\n}\n\n// kanban\nconst Kanban = () => {\n  const [state, setState] = useState<StateType>({\n    upcomingTasks: tasks.filter((t) => t.status === \"Upcoming\"),\n    inprogressTasks: tasks.filter((t) => t.status === \"Inprogress\"),\n    completedTasks: tasks.filter((t) => t.status === \"Completed\"),\n  });\n  const [totalTasks, setTotalTasks] = useState<number>(tasks.length);\n  const [newTaskModal, setNewTaskModal] = useState<boolean>(false);\n  const [newTaskDetails, setNewTaskDetails] = useState<any>(null);\n\n  /*\n   * Form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      title: yup.string().required(),\n      priority: yup.string().required(),\n      description: yup.string().required(),\n    })\n  );\n\n  /*\n   * Form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    reset,\n    formState: { errors },\n  } = methods;\n\n  /**\n   * Toggles the new task modal\n   */\n  const toggleNewTaskModal = () => {\n    setNewTaskModal((prevstate) => !prevstate);\n  };\n\n  /**\n   * Creates new empty task with given status\n   * @param status\n   * @param queue\n   */\n  const newTask = (status: string, queue: string) => {\n    setNewTaskDetails({\n      dueDate: new Date(),\n      userAvatar: [defaultAvatar],\n      status: status,\n      queue: queue,\n    });\n    setNewTaskModal(true);\n  };\n\n  /**\n   * When date changes\n   * @param {} date\n   */\n  const handleDateChange = (date: Date) => {\n    if (newTaskDetails) {\n      // setState({\n      //     ...state,\n      //     newTask: { ...state.newTask, dueDate: date },\n      // });\n      setNewTaskDetails({ ...newTaskDetails, dueDate: date });\n    }\n  };\n\n  // a little function to help us with reordering the result\n  const reorder = (list: any[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  };\n\n  /**\n   * Moves an item from one list to another list.\n   */\n  const move = (\n    source: Iterable<unknown> | ArrayLike<unknown>,\n    destination: Iterable<unknown> | ArrayLike<unknown>,\n    droppableSource: { index: number; droppableId: string | number },\n    droppableDestination: { index: number; droppableId: string | number }\n  ) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result: any = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n  };\n\n  /**\n   * Gets the list\n   */\n  const getList = (id: string) => {\n    const modifiedState: any = { ...state };\n    const stateTasks: any = modifiedState[id] && modifiedState[id];\n    return stateTasks;\n  };\n\n  /**\n   * On drag end\n   */\n  const onDragEnd = (result: DropResult) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(\n        getList(source.droppableId),\n        source.index,\n        destination.index\n      );\n      let localState: any = { ...state };\n      localState[source.droppableId] = items;\n      setState(localState);\n    } else {\n      const result = move(\n        getList(source.droppableId),\n        getList(destination.droppableId),\n        source,\n        destination\n      );\n      const localState = { ...state, ...result };\n      setState(localState);\n    }\n  };\n\n  /**\n   * Handles the new task form submission\n   */\n\n  const handleNewTask = (values: any) => {\n    const formData = {\n      title: values[\"title\"],\n      priority: values[\"priority\"],\n      description: values[\"description\"],\n    };\n\n    const newTask = {\n      ...newTaskDetails,\n      ...formData,\n      id: totalTasks + 1,\n      dueDate: newTaskDetails.dueDate.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      }),\n    };\n\n    let modifiedState: any = { ...state };\n    let tasks = [...getList(newTaskDetails.queue), newTask];\n    modifiedState[newTaskDetails.queue] = [...tasks];\n\n    setState(modifiedState);\n    setNewTaskModal(false);\n    setTotalTasks(totalTasks + 1);\n\n    // reset the form after submission\n    reset();\n  };\n\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Tasks\", path: \"apps/tasks/kanban\" },\n          { label: \"Kanban Board\", path: \"apps/tasks/kanban\", active: true },\n        ]}\n        title={\"Kanban Board\"}\n      />\n      <Row>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {/* todo */}\n          <Droppable droppableId=\"upcomingTasks\">\n            {(provided, snapshot) => (\n              <Col lg={4} ref={provided.innerRef}>\n                <Card>\n                  <Card.Body>\n                    <Dropdown className=\"float-end\" align=\"end\">\n                      <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                        <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item>Edit</Dropdown.Item>\n                        <Dropdown.Item>Delete</Dropdown.Item>\n                        <Dropdown.Item>Add Members</Dropdown.Item>\n                        <Dropdown.Item>Add Due Date</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n\n                    <h5 className=\"header-title\">Upcoming</h5>\n                    <p className=\"sub-header\">\n                      Your awesome text goes here. Your awesome text goes here.\n                    </p>\n                    {state.upcomingTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    <ul\n                      className=\"sortable-list tasklist list-unstyled\"\n                      id=\"upcoming\"\n                    >\n                      {(state.upcomingTasks || []).map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id + \"\"}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <li\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <TaskItem task={item} />\n                            </li>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </ul>\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-primary w-100 mt-3 waves-effect waves-light\"\n                      onClick={() => newTask(\"Pending\", \"upcomingTasks\")}\n                    >\n                      <i className=\"mdi mdi-plus-circle\"></i> Add New\n                    </Link>\n                  </Card.Body>\n                </Card>\n                {provided.placeholder}\n              </Col>\n            )}\n          </Droppable>\n\n          {/* in progress */}\n          <Droppable droppableId=\"inprogressTasks\">\n            {(provided, snapshot) => (\n              <Col lg={4} ref={provided.innerRef}>\n                <Card>\n                  <Card.Body>\n                    <Dropdown className=\"float-end\" align=\"end\">\n                      <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                        <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item>Edit</Dropdown.Item>\n                        <Dropdown.Item>Delete</Dropdown.Item>\n                        <Dropdown.Item>Add Members</Dropdown.Item>\n                        <Dropdown.Item>Add Due Date</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n\n                    <h5 className=\"header-title\">In Progress</h5>\n                    <p className=\"sub-header\">Your awesome text goes here.</p>\n\n                    {state.inprogressTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    <ul\n                      className=\"sortable-list tasklist list-unstyled\"\n                      id=\"inprogress\"\n                    >\n                      {(state.inprogressTasks || []).map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id + \"\"}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <li\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <TaskItem task={item} />\n                            </li>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </ul>\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-primary w-100 mt-3 waves-effect waves-light\"\n                      onClick={() => newTask(\"Inprogress\", \"inprogressTasks\")}\n                    >\n                      <i className=\"mdi mdi-plus-circle\"></i> Add New\n                    </Link>\n                  </Card.Body>\n                </Card>\n                {provided.placeholder}\n              </Col>\n            )}\n          </Droppable>\n\n          {/* done */}\n          <Droppable droppableId=\"completedTasks\">\n            {(provided, snapshot) => (\n              <Col lg={4} ref={provided.innerRef}>\n                <Card>\n                  <Card.Body>\n                    <Dropdown className=\"float-end\" align=\"end\">\n                      <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                        <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item>Edit</Dropdown.Item>\n                        <Dropdown.Item>Delete</Dropdown.Item>\n                        <Dropdown.Item>Add Members</Dropdown.Item>\n                        <Dropdown.Item>Add Due Date</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n\n                    <h5 className=\"header-title\">Completed</h5>\n                    <p className=\"sub-header\">\n                      Your awesome text goes here. Your awesome text goes here.\n                    </p>\n                    {state.completedTasks.length === 0 && (\n                      <p className=\"text-center text-muted pt-2 mb-0\">\n                        No Tasks\n                      </p>\n                    )}\n\n                    <ul\n                      className=\"sortable-list tasklist list-unstyled\"\n                      id=\"done\"\n                    >\n                      {(state.completedTasks || []).map((item, index) => (\n                        <Draggable\n                          key={item.id}\n                          draggableId={item.id + \"\"}\n                          index={index}\n                        >\n                          {(provided, snapshot) => (\n                            <li\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <TaskItem task={item} />\n                            </li>\n                          )}\n                        </Draggable>\n                      ))}\n                      {provided.placeholder}\n                    </ul>\n\n                    <Link\n                      to=\"#\"\n                      className=\"btn btn-primary w-100 mt-3 waves-effect waves-light\"\n                      onClick={() => newTask(\"Done\", \"completedTasks\")}\n                    >\n                      <i className=\"mdi mdi-plus-circle\"></i> Add New\n                    </Link>\n                  </Card.Body>\n                </Card>\n                {provided.placeholder}\n              </Col>\n            )}\n          </Droppable>\n          {/* </div> */}\n        </DragDropContext>\n      </Row>\n\n      {/* add new task modal */}\n      {newTaskDetails && (\n        <Modal\n          show={newTaskModal}\n          onHide={toggleNewTaskModal}\n          size=\"lg\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <h4 className=\"modal-title\">Create New Task</h4>\n          </Modal.Header>\n          <Modal.Body>\n            <form onSubmit={handleSubmit(handleNewTask)} className=\"px-2\">\n              <FormInput\n                name=\"title\"\n                label=\"Title\"\n                placeholder=\"Enter title\"\n                type=\"text\"\n                containerClass=\"mb-3\"\n                className=\"form-control form-control-light\"\n                register={register}\n                key=\"title\"\n                errors={errors}\n                control={control}\n              />\n\n              <FormInput\n                name=\"description\"\n                label=\"Description\"\n                type=\"textarea\"\n                containerClass=\"mb-3\"\n                className=\"form-control form-control-light\"\n                rows=\"3\"\n                register={register}\n                key=\"description\"\n                errors={errors}\n                control={control}\n              />\n\n              <Row>\n                <Col md={6}>\n                  <FormInput\n                    name=\"priority\"\n                    label=\"Priority\"\n                    type=\"select\"\n                    containerClass=\"mb-3\"\n                    className=\"form-select form-control-light\"\n                    register={register}\n                    key=\"priority\"\n                    errors={errors}\n                    control={control}\n                  >\n                    <option value=\"\">Select</option>\n                    <option value=\"Low\">Low</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"High\">High</option>\n                  </FormInput>\n                </Col>\n                <Col md={6}>\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Due Date</label> <br />\n                    <HyperDatepicker\n                      hideAddon\n                      dateFormat=\"yyyy-MM-dd\"\n                      value={newTaskDetails.dueDate}\n                      inputClass=\"form-control-light\"\n                      onChange={(date) => {\n                        handleDateChange(date);\n                      }}\n                    />\n                  </div>\n                </Col>\n              </Row>\n\n              <div className=\"text-end\">\n                <Button\n                  variant=\"light\"\n                  className=\"me-1\"\n                  onClick={toggleNewTaskModal}\n                >\n                  Cancel\n                </Button>\n                <Button variant=\"primary\" type=\"submit\">\n                  Create\n                </Button>\n              </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Kanban;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","_props$value","_props$value2","input","hideAddon","toDateString","_Fragment","DatePicker","customInput","timeIntervals","tI","selected","date","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","task","priority","Link","to","title","description","dueDate","userAvatar","map","avatar","index","src","alt","tasks","id","status","avatar1","avatar3","avatar2","avatar5","avatar6","avatar7","avatar8","avatar9","avatar10","_useState","useState","upcomingTasks","filter","t","inprogressTasks","completedTasks","_useState2","_slicedToArray","state","setState","_useState3","length","_useState4","totalTasks","setTotalTasks","_useState5","_useState6","newTaskModal","setNewTaskModal","_useState7","_useState8","newTaskDetails","setNewTaskDetails","schemaResolver","yupResolver","yup","shape","required","methods","useForm","resolver","handleSubmit","register","control","reset","errors","formState","toggleNewTaskModal","prevstate","newTask","queue","Date","defaultAvatar","getList","modifiedState","_objectSpread","React","PageTitle","breadCrumbItems","label","path","active","Row","DragDropContext","onDragEnd","result","source","destination","droppableId","items","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","reorder","localState","droppableSource","droppableDestination","sourceClone","destClone","_sourceClone$splice","move","Droppable","provided","snapshot","Col","lg","innerRef","Card","Dropdown","align","as","item","Draggable","draggableId","draggableProps","dragHandleProps","TaskItem","placeholder","Modal","show","onHide","size","centered","closeButton","onSubmit","values","formData","toLocaleDateString","year","month","day","concat","_toConsumableArray","FormInput","name","containerClass","rows","md","HyperDatepicker","handleDateChange","Button","variant"],"sourceRoot":""}