{"version":3,"file":"static/js/994.5b97119f.chunk.js","mappings":"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","sources":["pages/apps/Projects/helper.js","pages/apps/Projects/index.tsx"],"sourcesContent":["// helper.js\n\nimport config from \"../../../config\";\n\nconst BASE_URL = `${config.API_URL}/project`; // Replace with your actual base URL\n\nconst getProjects = async () => {\n  const response = await fetch(`${BASE_URL}`);\n  return response.json();\n};\n\nconst getProjectById = async (id) => {\n  const response = await fetch(`${BASE_URL}/${id}`);\n  return response.json();\n};\n\nconst createProject = async (project) => {\n  const response = await fetch(`${BASE_URL}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(project),\n  });\n  return response.json();\n};\n\nconst updateProject = async (id, updates) => {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(updates),\n  });\n  return response.json();\n};\n\nconst deleteProject = async (id) => {\n  const response = await fetch(`${BASE_URL}/${id}`, {\n    method: \"DELETE\",\n  });\n  return response.json();\n};\n\nexport {\n  getProjects,\n  getProjectById,\n  createProject,\n  updateProject,\n  deleteProject,\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  ButtonGroup,\n  Dropdown,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\nimport { deleteProject, getProjects } from \"./helper\";\n\n// dummy data\n// import { projects, ProjectsList } from \"./data\";\n\n// single project\nconst SingleProject = (props: {\n  project: any;\n  deleteProjectById: (id: string) => any;\n}) => {\n  const project = props.project || {};\n\n  return (\n    <Card className=\"project-box\">\n      <Card.Body>\n        <Dropdown className=\"card-widgets\" align=\"end\">\n          <Dropdown.Toggle\n            as=\"a\"\n            className=\"cursor-pointer card-drop p-0 shadow-none\"\n          >\n            <i className=\"mdi mdi-dots-horizontal m-0 text-muted h3\"></i>\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item>\n              <Link\n                to={`/apps/projects/${project.id}/edit`}\n                className=\"text-dark\"\n              >\n                <i className=\"mdi mdi-pencil me-1\"></i>Edit\n              </Link>\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() => props.deleteProjectById(project?.id)}>\n              <i className=\"mdi mdi-delete me-1\"></i>Delete\n            </Dropdown.Item>\n            {/* <Dropdown.Item>\n              <i className=\"mdi mdi-email-outline me-1\"></i>Invite\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <i className=\"mdi mdi-exit-to-app me-1\"></i>Leave\n            </Dropdown.Item> */}\n          </Dropdown.Menu>\n        </Dropdown>\n        <h4 className=\"mt-0\">\n          <Link\n            to={`/apps/projects/${project.id}/details`}\n            className=\"text-dark\"\n          >\n            {project.title}\n          </Link>\n        </h4>\n        <p className=\"text-muted text-uppercase\">\n          <i className=\"mdi mdi-account-circle\"></i>{\" \"}\n          <small>{project.companyName}</small>\n        </p>\n\n        <div\n          className={classNames(\n            \"badge\",\n            {\n              \"bg-soft-success text-primary\": project.state === \"Planning\",\n              \"bg-soft-success text-success\": project.state === \"Finished\",\n              \"bg-soft-secondary text-secondary\": project.state === \"Ongoing\",\n            },\n            \"mb-3\"\n          )}\n        >\n          {project.state}\n        </div>\n        <p className=\"text-muted font-13 mb-3 sp-line-2\">\n          {project.shortDesc}...\n          <Link to=\"#\" className=\"fw-bold text-muted\">\n            view more\n          </Link>\n        </p>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Projects = () => {\n  const [projects, setProjects] = useState<any>([]);\n  useEffect(() => {\n    getProjects().then(setProjects);\n  }, []);\n\n  const deleteProjectById = (id: string) => {\n    deleteProject(id).then(() => getProjects().then(setProjects));\n  };\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Projects\", path: \"/apps/projects/list\" },\n          { label: \"Projects List\", path: \"/apps/projects/list\", active: true },\n        ]}\n        title={\"Projects List\"}\n      />\n\n      <Row className=\"mb-2\">\n        <Col sm={4}>\n          <Link\n            to=\"/apps/projects/create\"\n            className=\"btn btn-danger rounded-pill waves-effect waves-light mb-3\"\n          >\n            <i className=\"mdi mdi-plus\"></i> Create Project\n          </Link>\n        </Col>\n        <Col sm={8}>\n          <div className=\"text-sm-end\">\n            {/* <div className=\"btn-group mb-3\">\n              <Button variant=\"primary\">All</Button>\n            </div>\n            <ButtonGroup className=\"btn-group mb-3 ms-1\">\n              <Button variant=\"light\">Ongoing</Button>\n              <Button variant=\"light\">Finished</Button>\n            </ButtonGroup> */}\n\n            {/* <div className=\"btn-group mb-3 ms-2 d-none d-sm-inline-block\">\n              <Button variant=\"dark\">\n                <i className=\"mdi mdi-apps\"></i>\n              </Button>\n            </div>\n            <div className=\"btn-group mb-3 d-none d-sm-inline-block\">\n              <Button variant=\"link\" className=\"text-dark\">\n                <i className=\"mdi mdi-format-list-bulleted-type\"></i>\n              </Button>\n            </div> */}\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        {(projects || []).map((project: { id: string }, i: any) => {\n          return (\n            <Col lg={4} key={\"proj-\" + project.id}>\n              <SingleProject\n                project={project}\n                deleteProjectById={deleteProjectById}\n              />\n            </Col>\n          );\n        })}\n      </Row>\n      {/* <Row>\n        <Col>\n          <div className=\"text-center mb-3\">\n            <Link to=\"#\" className=\"text-danger\">\n              <i className=\"mdi mdi-spin mdi-loading me-1\"></i> Load more{\" \"}\n            </Link>\n          </div>\n        </Col>\n      </Row> */}\n    </>\n  );\n};\n\nexport default Projects;\n"],"names":["BASE_URL","concat","config","getProjects","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","sent","abrupt","json","stop","apply","arguments","getProjectById","_ref2","_callee2","id","_context2","_x","createProject","_ref3","_callee3","project","_context3","method","headers","body","JSON","stringify","_x2","updateProject","_ref4","_callee4","updates","_context4","_x3","_x4","deleteProject","_ref5","_callee5","_context5","_x5","SingleProject","props","_jsx","Card","className","children","_jsxs","Dropdown","align","as","Link","to","onClick","deleteProjectById","title","companyName","classNames","state","shortDesc","_useState","useState","_useState2","_slicedToArray","projects","setProjects","useEffect","then","_Fragment","PageTitle","breadCrumbItems","label","path","active","Row","Col","sm","map","i","lg"],"sourceRoot":""}