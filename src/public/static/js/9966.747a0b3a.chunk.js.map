{"version":3,"file":"static/js/9966.747a0b3a.chunk.js","mappings":"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","sources":["pages/apps/CRM/Contacts/AddContacts.tsx","pages/apps/CRM/Contacts/helper.tsx","pages/apps/CRM/Contacts/ContactsDetails.tsx","pages/apps/CRM/Contacts/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport { VerticalForm, FormInput } from \"../../../../components/\";\n\ninterface AddContactsProps {\n  data: any | undefined,\n  show: boolean;\n  onHide: () => void;\n  onSubmit: (value: any) => void;\n}\n\nconst AddContacts = ({ data, show, onHide, onSubmit }: AddContactsProps) => {\n  /*\n    form validation schema\n    */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      name: yup.string().required(\"Please enter name\"),\n      email: yup\n        .string()\n        .required(\"Please enter email\")\n        .email(\"Please enter valid email\"),\n      phone: yup\n        .string()\n        .required(\"Please enter phone\")\n        .matches(/^\\d{10}$/, \"Phone number is not valid\"),\n      company: yup.string().required(\"Please enter company\"),\n    })\n  );\n\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={onHide}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header className=\"bg-light\" onHide={onHide} closeButton>\n          <Modal.Title className=\"m-0\">{data?.id ? \"Edit\" : \"Add\"} Contacts</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"p-4\">\n          <VerticalForm\n            onSubmit={x => onSubmit({id: data.id, ...x})}\n            resolver={schemaResolver}\n            defaultValues={{}}\n          >\n            <FormInput\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              defaultValue={data?.name}\n              placeholder=\"Enter name\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Email address\"\n              type=\"email\"\n              name=\"email\"\n              defaultValue={data?.email}\n              placeholder=\"Enter email\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Phone\"\n              type=\"text\"\n              defaultValue={data?.phone}\n              name=\"phone\"\n              placeholder=\"Enter phone number\"\n              containerClass={\"mb-3\"}\n            />\n            <FormInput\n              label=\"Company\"\n              type=\"text\"\n              name=\"company\"\n              defaultValue={data?.company}\n              placeholder=\"Enter company\"\n              containerClass={\"mb-3\"}\n            />\n\n            <div className=\"text-end\">\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                className=\"waves-effect waves-light me-1\"\n              >\n                Save\n              </Button>\n              <Button\n                variant=\"danger\"\n                type=\"submit\"\n                className=\"waves-effect waves-light\"\n                onClick={onHide}\n              >\n                Cancel\n              </Button>\n            </div>\n          </VerticalForm>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddContacts;\n","import config from \"../../../../config\";\n\nconst BASE_URL = `${config.API_URL}/contact`;\n\ninterface ContactsItems {\n  id: string;\n  name: string;\n  phone: string;\n  email: string;\n  company: string;\n  created_date: string;\n}\n\nexport const getAll = async (): Promise<ContactsItems[]> => {\n  try {\n    const response = await fetch(BASE_URL);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch events\");\n    }\n\n    const events: any[] = await response.json();\n    // Convert string dates to Date objects\n    return events.map((event) => ({\n      ...event,\n      start: new Date(event.start),\n      end: event.end ? new Date(event.end) : null,\n    }));\n  } catch (error: any) {\n    console.error(\"Error fetching events:\", error.message);\n    throw error;\n  }\n};\n\nexport const getById = async (\n  eventId: string\n): Promise<ContactsItems | null> => {\n  try {\n    const response = await fetch(`${BASE_URL}/${eventId}`);\n    if (!response.ok) {\n      throw new Error(\"Event not found\");\n    }\n\n    const eventData: any = await response.json();\n    // Convert string dates to Date objects\n    return {\n      ...eventData,\n      start: new Date(eventData.start),\n      end: eventData.end ? new Date(eventData.end) : null,\n    };\n  } catch (error: any) {\n    console.error(`Error fetching event with id ${eventId}:`, error.message);\n    throw error;\n  }\n};\n\nexport const post = async (data: ContactsItems): Promise<Response> => {\n  try {\n    return await fetch(BASE_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  } catch (error: any) {\n    console.error(\"Error creating event:\", error.message);\n    throw error;\n  }\n};\n\nexport const put = async (id: any, data: ContactsItems): Promise<Response> => {\n  try {\n    return await fetch(`${BASE_URL}/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  } catch (error: any) {\n    console.error(`Error updating event with id ${id}:`, error.message);\n    throw error;\n  }\n};\n\nexport const deleteById = async (eventId: any): Promise<void> => {\n  try {\n    const response = await fetch(`${BASE_URL}/${eventId}`, {\n      method: \"DELETE\",\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to delete event\");\n    }\n\n    // No need to parse response for DELETE request\n  } catch (error: any) {\n    console.error(`Error deleting event with id ${eventId}:`, error.message);\n    throw error;\n  }\n};\n","import React, { useState } from \"react\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// components\nimport Table from \"../../../../components/Table\";\n\nimport AddContacts from \"./AddContacts\";\nimport { post, put, deleteById } from \"./helper\";\n\n// basic info column render\nconst BasicInfoColumn = ({ row }: { row: any }) => {\n  return (\n    <>\n      {row.original.avatar && (\n        <img src={row.original.avatar} alt=\"\" className=\"me-2 rounded-circle\" />\n      )}\n      <Link to=\"#\" className=\"text-body fw-semibold\">\n        {row.original.name}\n      </Link>\n    </>\n  );\n};\ninterface ContactsItems {\n  id: string;\n  name: string;\n  phone: string;\n  email: string;\n  company: string;\n  created_date: string;\n}\n// action column render\n// @ts-ignore\nconst ActionColumn = ({ row, onEditClick, onDeleteClick }: any) => {\n  const handleEditClick = () => {\n    onEditClick(row);\n  };\n\n  const handleDeleteClick = () => onDeleteClick(row);\n\n  return (\n    <>\n      <Link to=\"#\" className=\"action-icon\" onClick={handleEditClick}>\n        <i className=\"mdi mdi-square-edit-outline\"></i>\n      </Link>\n      <Link to=\"#\" className=\"action-icon\" onClick={handleDeleteClick}>\n        <i className=\"mdi mdi-delete\"></i>\n      </Link>\n    </>\n  );\n};\n\ninterface ContactsDetailsProps {\n  contactDetails: {\n    id: string | number;\n    name: string;\n    phone: string;\n    email: string;\n    company: string;\n    created_date: string;\n  }[];\n  loadData: () => void;\n}\n\nconst ContactsDetails = ({\n  contactDetails,\n  loadData,\n}: ContactsDetailsProps) => {\n  /*\n   *   modal handeling\n   */\n  const [show, setShow] = useState<boolean>(false);\n\n  const [selectedData, setSelectedData] = useState<any>({});\n\n  const onCloseModal = () => {\n    setShow(false);\n    setSelectedData({});\n  };\n  const onOpenModal = () => {\n    setShow(true);\n  };\n\n  /*\n    handle form submission\n    */\n  const onSubmit = (data: any) => {\n    if (data?.id) {\n      put(data?.id, data).then(() => {\n        onCloseModal();\n        loadData();\n      });\n    } else {\n      post(data).then(() => {\n        onCloseModal();\n        loadData();\n      });\n    }\n  };\n\n  const onEditClick = (row: any) => {\n    setShow(true);\n    setSelectedData(row?.original);\n  };\n\n  const onDeleteClick = (row: any) => {\n    deleteById(row?.original?.id).then(() => {\n      loadData();\n    });\n  };\n\n  const columns = [\n    {\n      Header: \"Basic Info\",\n      accessor: \"name\",\n      sort: true,\n      Cell: BasicInfoColumn,\n      className: \"table-user\",\n    },\n    {\n      Header: \"Phone\",\n      accessor: \"phone\",\n      sort: true,\n    },\n    {\n      Header: \"Email\",\n      accessor: \"email\",\n      sort: true,\n    },\n    {\n      Header: \"Company\",\n      accessor: \"company\",\n      sort: true,\n    },\n    {\n      Header: \"Created Date\",\n      accessor: \"created_date\",\n      sort: true,\n    },\n  ];\n  // @ts-ignore\n  columns.push({\n    Header: \"Action\",\n    accessor: \"action\",\n    sort: false,\n    Cell: (cellProps: any) => (\n      <ActionColumn\n        {...cellProps}\n        onEditClick={onEditClick}\n        onDeleteClick={onDeleteClick}\n      />\n    ),\n  });\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Row className=\"justify-content-between\">\n            <Col>\n              <Button\n                variant=\"danger\"\n                className=\"waves-effect waves-light mb-2\"\n                onClick={onOpenModal}\n              >\n                Add Contact\n              </Button>\n            </Col>\n          </Row>\n          <Table\n            columns={columns}\n            data={contactDetails}\n            isSortable\n            tableClass=\"table-nowrap table-hover\"\n            searchBoxClass=\"my-2\"\n          />\n        </Card.Body>\n      </Card>\n\n      {/* add contact modal */}\n      <AddContacts\n        data={selectedData}\n        show={show}\n        onHide={onCloseModal}\n        onSubmit={onSubmit}\n      />\n    </>\n  );\n};\n\nexport default ContactsDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../../../components/PageTitle\";\n\nimport ContactsDetails from \"./ContactsDetails\";\nimport Profile from \"./Profile\";\n\nimport profilePic from \"../../../../assets/images/users/user-8.jpg\";\n\nimport {getAll} from \"./helper\";\n\ninterface PersonalDetails {\n  profile: string;\n  name: string;\n  position: string;\n  company: string;\n  about: string;\n  dob: string;\n  age: number;\n  added: string;\n  updated: string;\n}\n\ninterface ContactsItems {\n  id: number | string;\n  name: string;\n  phone: string;\n  email: string;\n  company: string;\n  created_date: string;\n}\n\nconst Contacts = () => {\n  const personalDetails: PersonalDetails = {\n    profile: profilePic,\n    name: \"Jade M. Walker\",\n    position: \"Branch manager\",\n    company: \"Vine Corporation\",\n    about:\n      \"Hi I'm Johnathn Deo,has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type.\",\n    dob: \"March 23, 1984\",\n    age: 34,\n    added: \"April 22, 2016\",\n    updated: \"Dec 13, 2017\",\n  };\n\n\n\n  const [contacts, setContacts] = useState<ContactsItems []>([])\n\n  const loadData = () => getAll().then(response => setContacts(response));\n\n\n  useEffect(() => {\n    loadData();\n  }, [])\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"CRM\", path: \"/apps/crm/contacts\" },\n          { label: \"Contacts\", path: \"/apps/crm/contacts\", active: true },\n        ]}\n        title={\"Contacts\"}\n      />\n\n      <Row>\n        <Col lg={12}>\n          <ContactsDetails contactDetails={contacts} loadData={loadData}/>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Contacts;"],"names":["_ref","data","show","onHide","onSubmit","schemaResolver","yupResolver","yup","shape","name","required","email","phone","matches","company","_jsx","_Fragment","children","_jsxs","Modal","centered","className","closeButton","id","VerticalForm","x","_objectSpread","resolver","defaultValues","FormInput","label","type","defaultValue","placeholder","containerClass","Button","variant","onClick","BASE_URL","concat","config","getAll","_asyncToGenerator","_regeneratorRuntime","_callee","response","events","_context","prev","next","fetch","sent","ok","Error","json","abrupt","map","event","start","Date","end","t0","console","error","message","stop","apply","arguments","post","_ref3","_callee3","_context3","method","headers","body","JSON","stringify","_x2","put","_ref4","_callee4","_context4","_x3","_x4","deleteById","_ref5","_callee5","eventId","_context5","_x5","BasicInfoColumn","row","original","avatar","src","alt","Link","to","ActionColumn","_ref2","onEditClick","onDeleteClick","contactDetails","loadData","_useState","useState","_useState2","_slicedToArray","setShow","_useState3","_useState4","selectedData","setSelectedData","onCloseModal","_row$original","then","columns","Header","accessor","sort","Cell","push","cellProps","Card","Row","Col","Table","isSortable","tableClass","searchBoxClass","AddContacts","contacts","setContacts","useEffect","PageTitle","breadCrumbItems","path","active","title","lg","ContactsDetails"],"sourceRoot":""}