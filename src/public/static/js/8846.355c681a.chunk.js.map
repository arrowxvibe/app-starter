{"version":3,"file":"static/js/8846.355c681a.chunk.js","mappings":"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","sources":["pages/apps/Chat/data.tsx","pages/apps/Chat/ChatUsers.tsx","pages/apps/Chat/ChatArea.tsx","pages/apps/Chat/index.tsx"],"sourcesContent":["import avatar1 from \"../../../assets/images/users/user-1.jpg\";\nimport avatar2 from \"../../../assets/images/users/user-2.jpg\";\nimport avatar3 from \"../../../assets/images/users/user-3.jpg\";\nimport avatar4 from \"../../../assets/images/users/user-4.jpg\";\nimport avatar5 from \"../../../assets/images/users/user-5.jpg\";\nimport avatar6 from \"../../../assets/images/users/user-6.jpg\";\nimport avatar7 from \"../../../assets/images/users/user-7.jpg\";\nimport avatar8 from \"../../../assets/images/users/user-8.jpg\";\nimport avatar9 from \"../../../assets/images/users/user-9.jpg\";\n\nexport interface ChatUser {\n  id?: number;\n  name?: string;\n  avatar?: string;\n  lastMessage?: string;\n  totalUnread?: number;\n  lastMessageOn?: string;\n  email?: string;\n  phone?: string;\n  location?: string;\n  languages?: string;\n  groups: string;\n}\n\nexport interface ChatMessage {\n  id: number;\n  from: ChatUser;\n  to: ChatUser;\n  message: {\n    type: string;\n    value: any;\n  };\n  sendOn?: string;\n}\n\nconst users: ChatUser[] = [\n  {\n    id: 1,\n    name: \"Brandon Smith\",\n    avatar: avatar2,\n    lastMessage: \"How are you today?\",\n    totalUnread: 3,\n    lastMessageOn: \"4:30am\",\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"California, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Favourties\",\n  },\n  {\n    id: 2,\n    name: \"Maria C\",\n    avatar: avatar5,\n    lastMessage: \"Hey! a reminder for tomorrow's meeting?\",\n    totalUnread: 0,\n    lastMessageOn: \"5:30am\",\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"New York, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Friends\",\n  },\n  {\n    id: 3,\n    name: \"Dominic A\",\n    avatar: avatar4,\n    lastMessage: \"Are we going to have this week's planning meeting?\",\n    totalUnread: 2,\n    lastMessageOn: \"Thu\",\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"New Jersey, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Favourties\",\n  },\n  {\n    id: 4,\n    name: \"Ronda D\",\n    avatar: avatar9,\n    lastMessage: \"Please check these design assets..\",\n    totalUnread: 0,\n    lastMessageOn: \"Wed\",\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"California, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Friends\",\n  },\n  {\n    id: 5,\n    name: \"Michael H\",\n    avatar: avatar6,\n    lastMessage: \"Are you free for 15 mins? I would like to discuss something\",\n    totalUnread: 6,\n    lastMessageOn: \"Tue\",\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"New York, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Friends\",\n  },\n  {\n    id: 6,\n    name: \"Thomas R\",\n    avatar: avatar7,\n    lastMessage: \"Let's have meeting today between me, you and Tony...\",\n    totalUnread: 0,\n    lastMessageOn: \"Tue\",\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"New Jersey, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Friends\",\n  },\n  {\n    id: 7,\n    name: \"Thomas J\",\n    avatar: avatar8,\n    lastMessage: \"Howdy?\",\n    totalUnread: 0,\n    lastMessageOn: \"Tue\",\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"New York, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Favourties\",\n  },\n  {\n    id: 8,\n    name: \"Rikcy J\",\n    avatar: avatar3,\n    lastMessage: \"Are you interested in learning?\",\n    totalUnread: 28,\n    lastMessageOn: \"Mon\",\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"New Jersey, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Friends\",\n  },\n];\n\nconst messages: ChatMessage[] = [];\n\nconst defaultTo = {\n  id: 9,\n  name: \"Geneva M\",\n  avatar: avatar1,\n  email: \"support@coderthemes.com\",\n  phone: \"+1 456 9595 9594\",\n  location: \"California, USA\",\n  languages: \"English, German, Spanish\",\n  groups: \"Work, Friends\",\n};\n\nfor (const user of users) {\n  messages.push(\n    {\n      id: 1,\n      message: {\n        type: \"text\",\n        value: \"Hello!\",\n      },\n      to: defaultTo,\n      from: user,\n      sendOn: \"10:00\",\n    },\n    {\n      id: 2,\n      message: {\n        type: \"text\",\n        value: \"Hi, How are you? What about our next meeting?\",\n      },\n      to: user,\n      from: defaultTo,\n      sendOn: \"10:01\",\n    },\n    {\n      id: 3,\n      message: {\n        type: \"text\",\n        value: \"Yeah everything is fine\",\n      },\n      to: defaultTo,\n      from: user,\n      sendOn: \"10:01\",\n    },\n    {\n      id: 4,\n      message: {\n        type: \"text\",\n        value: \"Awesome!\",\n      },\n      to: user,\n      from: defaultTo,\n      sendOn: \"10:02\",\n    },\n    {\n      id: 5,\n      message: {\n        type: \"text\",\n        value: \"Let's have it today if you are free\",\n      },\n      to: defaultTo,\n      from: user,\n      sendOn: \"10:03\",\n    },\n    {\n      id: 6,\n      message: {\n        type: \"text\",\n        value: \"Sure thing! let me know if 2pm works for you\",\n      },\n      to: user,\n      from: defaultTo,\n      sendOn: \"10:03\",\n    },\n    {\n      id: 7,\n      message: {\n        type: \"text\",\n        value:\n          \"Sorry, I have another meeting scheduled at 2pm. Can we have it at 3pm instead?\",\n      },\n      to: defaultTo,\n      from: user,\n      sendOn: \"10:04\",\n    },\n    {\n      id: 8,\n      message: {\n        type: \"text\",\n        value:\n          \"We can also discuss about the presentation talk format if you have some extra mins\",\n      },\n      to: defaultTo,\n      from: user,\n      sendOn: \"10:04\",\n    },\n    {\n      id: 9,\n      message: {\n        type: \"text\",\n        value:\n          \"3pm it is. Sure, let's discuss about presentation format, it would be great to finalize today. I am attaching the last year format and assets here..\",\n      },\n      to: user,\n      from: defaultTo,\n      sendOn: \"10:05\",\n    },\n    {\n      id: 10,\n      message: {\n        type: \"file\",\n        value: {\n          file: \"Arita-sketch.zip\",\n          size: \"2.3MB\",\n        },\n      },\n      to: user,\n      from: defaultTo,\n      sendOn: \"10:05\",\n    }\n  );\n}\n\nexport { users, messages };\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport classnames from \"classnames\";\nimport SimpleBar from \"simplebar-react\";\n\n// dummy data\nimport { users, ChatUser } from \"./data\";\n\nimport profilePic from \"../../../assets/images/users/user-1.jpg\";\n\ninterface ChatUsersProps {\n  onUserSelect: (value: ChatUser) => void;\n}\n\n// ChatUsers\nconst ChatUsers = ({ onUserSelect }: ChatUsersProps) => {\n  const [user, setUser] = useState<ChatUser[]>([...users]);\n  const [selectedUser, setSelectedUser] = useState<ChatUser>(users[1]);\n\n  /**\n   * Search the user\n   * @param {*} text\n   */\n  const search = (text: string) => {\n    setUser(\n      text\n        ? [...users].filter(\n            (u) => u.name!.toLowerCase().indexOf(text.toLowerCase()) >= 0\n          )\n        : [...users]\n    );\n  };\n\n  /**\n   * Activates the user\n   * @param {*} user\n   */\n  const activateUser = (user: ChatUser) => {\n    setSelectedUser(user);\n    if (onUserSelect) {\n      onUserSelect(user);\n    }\n  };\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <div className=\"d-flex align-items-start mb-3\">\n            <img\n              src={profilePic}\n              className=\"me-2 rounded-circle\"\n              height=\"42\"\n              alt=\"\"\n            />\n            <div className=\"w-100\">\n              <h5 className=\"mt-0 mb-0 font-15\">\n                <Link to=\"#\" className=\"text-reset\">\n                  Geneva McKnight\n                </Link>\n              </h5>\n              <p className=\"mt-1 mb-0 text-muted font-14\">\n                <small className=\"mdi mdi-circle text-success\"></small> Online\n              </p>\n            </div>\n            <Link to=\"#\" className=\"text-reset font-20\">\n              <i className=\"mdi mdi-cog-outline\"></i>\n            </Link>\n          </div>\n\n          <form className=\"search-bar mb-3\">\n            <div className=\"position-relative\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-light\"\n                placeholder=\"People, groups & messages...\"\n                onKeyUp={(e: any) => search(e.target.value)}\n              />\n              <span className=\"mdi mdi-magnify\"></span>\n            </div>\n          </form>\n\n          <h6 className=\"font-13 text-muted text-uppercase\">Group Chats</h6>\n          <div className=\"p-2\">\n            <Link to=\"#\" className=\"text-reset mb-2 d-block\">\n              <i className=\"mdi mdi-checkbox-blank-circle-outline me-1 text-success\"></i>\n              <span className=\"mb-0 mt-1\">App Development</span>\n            </Link>\n\n            <Link to=\"#\" className=\"text-reset mb-2 d-block\">\n              <i className=\"mdi mdi-checkbox-blank-circle-outline me-1 text-warning\"></i>\n              <span className=\"mb-0 mt-1\">Office Work</span>\n            </Link>\n          </div>\n\n          <h6 className=\"font-13 text-muted text-uppercase\">Contacts</h6>\n          <Row>\n            <Col>\n              <SimpleBar style={{ height: \"375px\", width: \"100%\" }}>\n                {(user || []).map((user, index) => {\n                  return (\n                    <Link\n                      to=\"#\"\n                      key={index}\n                      className=\"text-body\"\n                      onClick={(e: any) => {\n                        activateUser(user);\n                      }}\n                    >\n                      <div\n                        className={classnames(\n                          \"d-flex\",\n                          \"align-items-start\",\n                          \"p-2\",\n                          {\n                            \"bg-light\": user.id === selectedUser.id,\n                          }\n                        )}\n                      >\n                        <img\n                          src={user.avatar}\n                          className=\"me-2 rounded-circle\"\n                          height=\"42\"\n                          alt=\"\"\n                        />\n\n                        <div className=\"w-100\">\n                          <h5 className=\"mt-0 mb-0 font-14\">\n                            <span className=\"float-end text-muted fw-normal font-12\">\n                              {user.lastMessageOn}\n                            </span>\n                            {user.name}\n                          </h5>\n                          <p className=\"mt-1 mb-0 text-muted font-14\">\n                            <span className=\"w-25 float-end text-end\">\n                              {user.totalUnread !== 0 && (\n                                <span className=\"badge badge-soft-danger\">\n                                  {user.totalUnread}\n                                </span>\n                              )}\n                            </span>\n                            <span className=\"w-75\">{user.lastMessage}</span>\n                          </p>\n                        </div>\n                      </div>\n                    </Link>\n                  );\n                })}\n              </SimpleBar>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatUsers;\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  Dropdown,\n  Row,\n  Col,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport classnames from \"classnames\";\nimport SimpleBar from \"simplebar-react\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// components\nimport { FormInput } from \"../../../components/\";\nimport Loader from \"../../../components/Loader\";\n\n// default data\nimport { messages, ChatMessage, ChatUser } from \"./data\";\n\nimport avatar1 from \"../../../assets/images/users/user-1.jpg\";\n\nconst UserMessage = ({\n  message,\n  toUser,\n}: {\n  message: ChatMessage;\n  toUser: ChatUser;\n}) => {\n  return (\n    <li className={classnames(\"clearfix\", { odd: message.from.id === toUser.id })} >\n      <div className=\"chat-avatar\">\n        <img src={message.from.avatar} className=\"rounded\" alt=\"\" />\n        <i>{message.sendOn}</i>\n      </div>\n\n      <div className=\"conversation-text\">\n        {message.message.type === \"text\" && (\n          <div className=\"ctext-wrap\">\n            <i>{message.from.name}</i>\n            {message.message.type === \"text\" && <p>{message.message.value}</p>}\n          </div>\n        )}\n        {message.message.type === \"file\" && (\n          <Card className=\"mt-2 mb-1 shadow-none border text-start\">\n            <div className=\"p-2\">\n              <Row className=\"align-items-center\">\n                <Col className=\"col-auto\">\n                  <div className=\"avatar-sm\">\n                    <span className=\"avatar-title bg-primary rounded\">\n                      .ZIP\n                    </span>\n                  </div>\n                </Col>\n                <Col className=\"ps-0\">\n                  <Link to=\"#\" className=\"text-muted fw-bold\">\n                    {message.message.value.file}\n                  </Link>\n                  <p className=\"mb-0\">{message.message.value.size}</p>\n                </Col>\n                <Col className=\"col-auto\">\n                  <Link to=\"#\" className=\"btn btn-link btn-lg text-muted\">\n                    <i className=\"dripicons-download\"></i>\n                  </Link>\n                </Col>\n              </Row>\n            </div>\n          </Card>\n        )}\n      </div>\n\n      <Dropdown\n        className=\"conversation-actions\"\n        align={message.from.id === toUser.id ? \"start\" : \"end\"}\n      >\n        <Dropdown.Toggle as=\"a\" className=\"btn-sm card-drop cursor-pointer\">\n          <i className=\"mdi mdi-dots-vertical font-16\"></i>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item>Copy Message</Dropdown.Item>\n          <Dropdown.Item>Edit</Dropdown.Item>\n          <Dropdown.Item>Delete</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </li>\n  );\n};\n\ninterface ChatAreaProps {\n  selectedUser: ChatUser;\n}\n\n// ChatArea\nconst ChatArea = ({ selectedUser }: ChatAreaProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [userMessages, setUserMessages] = useState<ChatMessage[]>([]);\n\n  const [toUser] = useState<ChatUser>({\n    id: 9,\n    name: \"Geneva M\",\n    avatar: avatar1,\n    email: \"support@coderthemes.com\",\n    phone: \"+1 456 9595 9594\",\n    location: \"California, USA\",\n    languages: \"English, German, Spanish\",\n    groups: \"Work, Friends\",\n  });\n\n  /*\n   *  Fetches the messages for selected user\n   */\n  const getMessagesForUser = useCallback(() => {\n    if (selectedUser) {\n      setLoading(true);\n      setTimeout(() => {\n        setUserMessages(\n          [...messages].filter(\n            (m) =>\n              (m.to.id === toUser.id && m.from.id === selectedUser.id) ||\n              (toUser.id === m.from.id && m.to.id === selectedUser.id)\n          )\n        );\n        setLoading(false);\n      }, 750);\n    }\n  }, [selectedUser, toUser]);\n\n  useEffect(() => {\n    getMessagesForUser();\n  }, [getMessagesForUser]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      newMessage: yup.string().required(\"Please enter your messsage\"),\n    })\n  );\n\n  /*\n   * form methods\n   */\n  const methods = useForm({ resolver: schemaResolver });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: { errors },\n    reset,\n  } = methods;\n\n  /**\n   * sends the chat message\n   */\n  const sendChatMessage = async (values: { newMessage: string }) => {\n    let newUserMessages = [...userMessages];\n    newUserMessages.push({\n      id: userMessages.length + 1,\n      from: toUser,\n      to: selectedUser,\n      message: { type: \"text\", value: values[\"newMessage\"] },\n      sendOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n    });\n    setTimeout(() => {\n      let otherNewMessages = [...newUserMessages]\n      otherNewMessages.push({\n        id: userMessages.length + 1,\n        from: selectedUser,\n        to: toUser,\n        message: { type: \"text\", value: values[\"newMessage\"] },\n        sendOn: new Date().getHours() + \":\" + new Date().getMinutes(),\n      })\n      setUserMessages(otherNewMessages);\n    }, 1000);\n    setUserMessages(newUserMessages);\n    reset();\n  };\n\n  const AlwaysScrollToBottom = () => {\n    const elementRef = useRef<HTMLDivElement>(null);\n    useEffect(() => {\n      if (elementRef && elementRef.current && elementRef.current.scrollIntoView) {\n        elementRef.current.scrollIntoView({behavior:'smooth'})\n      }\n    })\n    return <div ref={elementRef} />\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body className=\"py-2 px-3 border-bottom border-light\">\n          <Row className=\"justify-content-between py-1\">\n            <Col sm={7}>\n              <div className=\"d-flex align-items-start\">\n                <img\n                  src={selectedUser.avatar}\n                  className=\"me-2 rounded-circle\"\n                  height=\"36\"\n                  alt=\"Brandon Smith\"\n                />\n                <div>\n                  <h5 className=\"mt-0 mb-0 font-15\">\n                    <Link to=\"/apps/contacts/profile\" className=\"text-reset\">\n                      {selectedUser.name}\n                    </Link>\n                  </h5>\n                  <p className=\"mt-1 mb-0 text-muted font-12\">\n                    <small className=\"mdi mdi-circle text-success\"></small>{\" \"}\n                    Online\n                  </p>\n                </div>\n              </div>\n            </Col>\n            <Col className=\"col-auto\">\n              <div id=\"tooltips-container\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"\">Voice Call</Tooltip>}\n                >\n                  <Link\n                    to=\"#\"\n                    className=\"text-reset font-19 py-1 px-2 d-inline-block\"\n                  >\n                    <i className=\"fe-phone-call\"></i>\n                  </Link>\n                </OverlayTrigger>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"\">Video Call</Tooltip>}\n                >\n                  <Link\n                    to=\"#\"\n                    className=\"text-reset font-19 py-1 px-2 d-inline-block\"\n                  >\n                    <i className=\"fe-video\"></i>\n                  </Link>\n                </OverlayTrigger>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"\">Add Users</Tooltip>}\n                >\n                  <Link\n                    to=\"#\"\n                    className=\"text-reset font-19 py-1 px-2 d-inline-block\"\n                  >\n                    <i className=\"fe-user-plus\"></i>\n                  </Link>\n                </OverlayTrigger>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"\">Delete Chat</Tooltip>}\n                >\n                  <Link\n                    to=\"#\"\n                    className=\"text-reset font-19 py-1 px-2 d-inline-block\"\n                  >\n                    <i className=\"fe-trash-2\"></i>\n                  </Link>\n                </OverlayTrigger>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Body>\n          {loading && <Loader />}\n\n          <SimpleBar\n            style={{ height: \"465px\", width: \"100%\" }}\n            id=\"chatScrollBar\"\n          >\n            <ul\n              className=\"conversation-list\"\n            >\n              {(userMessages || []).map((message, index) => {\n                return (\n                  <UserMessage key={index} message={message} toUser={toUser} />\n                );\n              })}\n              <AlwaysScrollToBottom />\n            </ul>\n          </SimpleBar>\n\n          <Row>\n            <Col>\n              <div className=\"mt-3 bg-light p-3 rounded\">\n                <form\n                  noValidate\n                  name=\"chat-form\"\n                  id=\"chat-form\"\n                  onSubmit={handleSubmit(sendChatMessage)}\n                >\n                  <div className=\"row\">\n                    <div className=\"col mb-2 mb-sm-0\">\n                      <FormInput\n                        type=\"text\"\n                        name=\"newMessage\"\n                        className=\"border-0\"\n                        placeholder=\"Enter your text\"\n                        register={register}\n                        key=\"newMessage\"\n                        errors={errors}\n                        control={control}\n                      />\n                    </div>\n                    <div className=\"col-sm-auto\">\n                      <div className=\"btn-group\">\n                        <Link to=\"#\" className=\"btn btn-light\">\n                          <i className=\"fe-paperclip\"></i>\n                        </Link>\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-success chat-send w-100\"\n                        >\n                          <i className=\"fe-send\"></i>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default ChatArea;\n","import React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\n\nimport ChatUsers from \"./ChatUsers\";\nimport ChatArea from \"./ChatArea\";\n// dummy data\nimport { users, ChatUser } from \"./data\";\n\n// ChatApp\nconst ChatApp = () => {\n  const [selectedUser, setSelectedUser] = useState<ChatUser>(users[1]);\n\n  /**\n   * On user change\n   */\n  const onUserChange = (user: ChatUser) => {\n    setSelectedUser(user);\n  };\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Apps\", path: \"/apps/chat\" },\n          { label: \"Chat\", path: \"/apps/chat\", active: true },\n        ]}\n        title={\"Chat\"}\n      />\n\n      <Row>\n        <Col lg={4} xl={3}>\n          <ChatUsers onUserSelect={onUserChange} />\n        </Col>\n        <Col lg={8} xl={9}>\n          <ChatArea selectedUser={selectedUser} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default ChatApp;\n"],"names":["users","id","name","avatar","avatar2","lastMessage","totalUnread","lastMessageOn","email","phone","location","languages","groups","avatar5","avatar4","avatar6","avatar7","avatar8","avatar3","messages","defaultTo","avatar1","_i","_users","length","user","push","message","type","value","to","from","sendOn","file","size","_ref","onUserSelect","_useState","useState","_toConsumableArray","_useState2","_slicedToArray","setUser","_useState3","_useState4","selectedUser","setSelectedUser","_jsx","_Fragment","children","Card","_jsxs","className","src","profilePic","height","alt","Link","placeholder","onKeyUp","e","text","target","filter","u","toLowerCase","indexOf","Row","Col","SimpleBar","style","width","map","index","onClick","activateUser","classnames","UserMessage","toUser","odd","Dropdown","align","as","_ref2","loading","setLoading","userMessages","setUserMessages","_useState5","getMessagesForUser","useCallback","setTimeout","m","useEffect","schemaResolver","yupResolver","yup","shape","newMessage","required","methods","useForm","resolver","handleSubmit","register","control","errors","formState","reset","sendChatMessage","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","values","newUserMessages","_context","prev","next","Date","getHours","getMinutes","otherNewMessages","stop","_x","apply","arguments","AlwaysScrollToBottom","elementRef","useRef","current","scrollIntoView","behavior","ref","sm","OverlayTrigger","placement","overlay","Tooltip","Loader","noValidate","onSubmit","FormInput","PageTitle","breadCrumbItems","label","path","active","title","lg","xl","ChatUsers","ChatArea"],"sourceRoot":""}