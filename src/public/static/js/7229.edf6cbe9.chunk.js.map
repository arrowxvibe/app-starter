{"version":3,"file":"static/js/7229.edf6cbe9.chunk.js","mappings":"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","sources":["pages/apps/Ecommerce/Sellers.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\nimport Table from \"../../../components/Table\";\n\n// dummy data\nimport { sellers } from \"./data\";\n\n/* name column render */\nconst NameColumn = ({ row }: { row: any }) => {\n  return (\n    <>\n      <div className=\"table-user\">\n        <img src={row.original.image} alt=\"\" className=\"me-2 rounded-circle\" />\n        <Link to=\"#\" className=\"text-body fw-semibold\">\n          {row.original.name}\n        </Link>\n      </div>\n    </>\n  );\n};\n\n/* ratings column render */\nconst RatingsColumn = ({ row }: { row: any }) => {\n  const variant =\n    row.original.ratings >= 3.0 && row.original.ratings <= 5.0\n      ? \"text-warning\"\n      : \"text-danger\";\n  return (\n    <>\n      <i className={classNames(\"mdi\", \"mdi-star\", variant)}></i>{\" \"}\n      {row.original.ratings}\n    </>\n  );\n};\n\n/* action column render */\nconst ActionColumn = () => {\n  return (\n    <>\n      <Link to=\"#\" className=\"action-icon\">\n        {\" \"}\n        <i className=\"mdi mdi-square-edit-outline\"></i>\n      </Link>\n      <Link to=\"#\" className=\"action-icon\">\n        {\" \"}\n        <i className=\"mdi mdi-delete\"></i>\n      </Link>\n    </>\n  );\n};\n\n// get all columns\nconst columns = [\n  {\n    Header: \"Owner Name\",\n    accessor: \"name\",\n    sort: true,\n    Cell: NameColumn,\n  },\n  {\n    Header: \"Store Name\",\n    accessor: \"store\",\n    sort: true,\n  },\n  {\n    Header: \"Ratings\",\n    accessor: \"ratings\",\n    sort: true,\n    Cell: RatingsColumn,\n  },\n  {\n    Header: \"Products\",\n    accessor: \"products\",\n    sort: true,\n  },\n  {\n    Header: \"Wallet Balance\",\n    accessor: \"balance\",\n    sort: true,\n  },\n  {\n    Header: \"Created Date\",\n    accessor: \"created_on\",\n    sort: true,\n  },\n  {\n    Header: \"Revenue\",\n    accessor: \"revenue\",\n    sort: true,\n  },\n  {\n    Header: \"Action\",\n    accessor: \"action\",\n    sort: false,\n    Cell: ActionColumn,\n  },\n];\n\n// get pagelist to display\nconst sizePerPageList = [\n  {\n    text: \"10\",\n    value: 10,\n  },\n  {\n    text: \"25\",\n    value: 25,\n  },\n  {\n    text: \"All\",\n    value: sellers.length,\n  },\n];\n\n// main component\nconst Sellers = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Ecommerce\", path: \"/apps/ecommerce/sellers\" },\n          { label: \"Sellers\", path: \"/apps/ecommerce/sellers\", active: true },\n        ]}\n        title={\"Sellers\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <Row>\n                <Col sm={4}>\n                  <Button variant=\"danger\" className=\"mb-2\">\n                    <i className=\"mdi mdi-plus-circle me-2\"></i> Add Seller\n                  </Button>\n                </Col>\n\n                <Col sm={8}>\n                  <div className=\"text-sm-end\">\n                    <Button variant=\"success\" className=\"mb-2 me-1\">\n                      <i className=\"mdi mdi-cog-outline\"></i>\n                    </Button>\n\n                    <Button variant=\"light\" className=\"mb-2 me-1\">\n                      Import\n                    </Button>\n\n                    <Button variant=\"light\" className=\"mb-2 me-1\">\n                      Export\n                    </Button>\n                  </div>\n                </Col>\n              </Row>\n\n              <Table\n                columns={columns}\n                data={sellers}\n                pageSize={10}\n                sizePerPageList={sizePerPageList}\n                isSortable={true}\n                pagination={true}\n                isSelectable={true}\n                isSearchable={true}\n                theadClass=\"table-light\"\n                searchBoxClass=\"mt-2 mb-3\"\n              />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Sellers;\n"],"names":["columns","Header","accessor","sort","Cell","_ref","row","_jsx","_Fragment","children","_jsxs","className","src","original","image","alt","Link","to","name","_ref2","variant","ratings","classNames","sizePerPageList","text","value","sellers","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","Card","sm","Button","Table","data","pageSize","isSortable","pagination","isSelectable","isSearchable","theadClass","searchBoxClass"],"sourceRoot":""}