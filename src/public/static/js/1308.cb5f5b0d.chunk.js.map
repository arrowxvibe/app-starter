{"version":3,"file":"static/js/1308.cb5f5b0d.chunk.js","mappings":"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","sources":["pages/apps/Ecommerce/Customers.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\nimport Table from \"../../../components/Table\";\n\n// dummy data\nimport { customers } from \"./data\";\n\n/* name column render */\nconst NameColumn = ({ row }: { row: any }) => {\n  return (\n    <div className=\"table-user\">\n      <img src={row.original.avatar} alt=\"\" className=\"me-2 rounded-circle\" />\n      <Link to=\"#\" className=\"text-body fw-semibold\">\n        {row.original.name}\n      </Link>\n    </div>\n  );\n};\n\n/* last order column render */\nconst LastOrderColumn = ({ row }: { row: any }) => {\n  return (\n    <>\n      {row.original.last_order.date}{\" \"}\n      <small className=\"text-muted\">{row.original.last_order.time}</small>\n    </>\n  );\n};\n\n/* status column render */\nconst StatusColumn = ({ row }: { row: any }) => {\n  return (\n    <React.Fragment>\n      <span\n        className={classNames(\"badge\", {\n          \"badge-soft-success\": row.original.status === \"Active\",\n          \"badge-soft-danger\": row.original.status === \"Blocked\",\n        })}\n      >\n        {row.original.status}\n      </span>\n    </React.Fragment>\n  );\n};\n\n/* action column render */\nconst ActionColumn = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"#\" className=\"action-icon\">\n        {\" \"}\n        <i className=\"mdi mdi-eye\"></i>\n      </Link>\n      <Link to=\"#\" className=\"action-icon\">\n        {\" \"}\n        <i className=\"mdi mdi-square-edit-outline\"></i>\n      </Link>\n      <Link to=\"#\" className=\"action-icon\">\n        {\" \"}\n        <i className=\"mdi mdi-delete\"></i>\n      </Link>\n    </React.Fragment>\n  );\n};\n\n// columns to render\nconst columns = [\n  {\n    Header: \"Customer\",\n    accessor: \"name\",\n    sort: true,\n    Cell: NameColumn,\n    classes: \"table-user\",\n  },\n  {\n    Header: \"Phone\",\n    accessor: \"phone\",\n    sort: true,\n  },\n  {\n    Header: \"Balance\",\n    accessor: \"balance\",\n    sort: true,\n  },\n  {\n    Header: \"Orders\",\n    accessor: \"orders\",\n    sort: true,\n  },\n  {\n    Header: \"Last Order\",\n    accessor: \"last_order\",\n    sort: true,\n    Cell: LastOrderColumn,\n  },\n  {\n    Header: \"Status\",\n    accessor: \"status\",\n    sort: true,\n    Cell: StatusColumn,\n  },\n  {\n    Header: \"Action\",\n    accessor: \"action\",\n    sort: false,\n    Cell: ActionColumn,\n  },\n];\n\n// give page size\nconst sizePerPageList = [\n  {\n    text: \"10\",\n    value: 10,\n  },\n  {\n    text: \"25\",\n    value: 25,\n  },\n  {\n    text: \"All\",\n    value: customers.length,\n  },\n];\n\n// main component\nconst Customers = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Ecommerce\", path: \"/apps/ecommerce/customers\" },\n          {\n            label: \"Customers\",\n            path: \"/apps/ecommerce/customers\",\n            active: true,\n          },\n        ]}\n        title={\"Customers\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <Row>\n                <Col sm={4}>\n                  <Button className=\"btn btn-danger mb-2\">\n                    <i className=\"mdi mdi-plus-circle me-2\"></i> Add Customer\n                  </Button>\n                </Col>\n\n                <Col sm={8}>\n                  <div className=\"text-sm-end\">\n                    <Button className=\"btn btn-success mb-2 me-1\">\n                      <i className=\"mdi mdi-cog-outline\"></i>\n                    </Button>\n\n                    <Button className=\"btn btn-light mb-2 me-1\">Import</Button>\n\n                    <Button className=\"btn btn-light mb-2\">Export</Button>\n                  </div>\n                </Col>\n              </Row>\n\n              <Table\n                columns={columns}\n                data={customers}\n                pageSize={10}\n                sizePerPageList={sizePerPageList}\n                isSortable={true}\n                pagination={true}\n                isSelectable={true}\n                isSearchable={true}\n                tableClass=\"table-striped dt-responsive nowrap w-100\"\n                searchBoxClass=\"my-2\"\n              />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Customers;\n"],"names":["columns","Header","accessor","sort","Cell","_ref","row","_jsxs","className","children","_jsx","src","original","avatar","alt","Link","to","name","classes","_ref2","_Fragment","last_order","date","time","_ref3","React","classNames","status","sizePerPageList","text","value","customers","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","Card","sm","Button","Table","data","pageSize","isSortable","pagination","isSelectable","isSearchable","tableClass","searchBoxClass"],"sourceRoot":""}