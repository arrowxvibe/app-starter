{"version":3,"file":"static/js/7396.33aac13d.chunk.js","mappings":"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","sources":["pages/uikit/SweetAlerts.tsx"],"sourcesContent":["import React from \"react\";\nimport { withSwal } from \"react-sweetalert2\";\nimport { Row, Col, Card } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nimport logosm from \"../../assets/images/logo-sm.png\";\n\nconst SweetAlerts = withSwal((props: any) => {\n  const { swal } = props;\n\n  let timerInterval: NodeJS.Timeout;\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Extended UI\", path: \"/extended-ui/sweet-alert\" },\n          {\n            label: \"Sweet Alerts\",\n            path: \"/extended-ui/sweet-alert\",\n            active: true,\n          },\n        ]}\n        title={\"Sweet Alerts\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Examples</h4>\n\n              <p className=\"sub-header\">\n                A beautiful, responsive, customizable, accessible (WAI-ARIA)\n                replacement for JavaScript's popup boxes\n              </p>\n              <table className=\"table table-borderless table-centered mb-0\">\n                <thead className=\"table-light\">\n                  <tr>\n                    <th style={{ width: \"50%\" }}>Alert Type</th>\n                    <th>Example</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>A basic message</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-basic\"\n                        onClick={() =>\n                          swal.fire({\n                            title: \"Any fool can use a computer!\",\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>A title with a text under</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-title\"\n                        onClick={() =>\n                          swal.fire({\n                            title: \"The Internet?\",\n                            text: \"That thing is still around?\",\n                            icon: \"question\",\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>A success message!</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-success\"\n                        onClick={() =>\n                          swal.fire({\n                            title: \"Good job!\",\n                            text: \"You clicked the button!\",\n                            icon: \"success\",\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>A modal window with a long content inside:</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-long-content\"\n                        onClick={() =>\n                          swal.fire({\n                            imageUrl: \"https://placeholder.pics/svg/300x1500\",\n                            imageHeight: 1500,\n                            imageAlt: \"A tall image\",\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>A custom positioned dialog</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-custom-position\"\n                        onClick={() =>\n                          swal.fire({\n                            position: \"top-end\",\n                            icon: \"success\",\n                            title: \"Your work has been saved\",\n                            showConfirmButton: false,\n                            timer: 1500,\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      A modal with a title, an error icon, a text, and a footer\n                    </td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-error\"\n                        onClick={() =>\n                          swal.fire({\n                            icon: \"error\",\n                            title: \"Oops...\",\n                            text: \"Something went wrong!\",\n                            footer: \"<a href>Why do I have this issue?</a>\",\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      A confirm dialog, with a function attached to the\n                      \"Confirm\"-button...\n                    </td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-warning\"\n                        onClick={() =>\n                          swal\n                            .fire({\n                              title: \"Are you sure?\",\n                              text: \"You won't be able to revert this!\",\n                              icon: \"warning\",\n                              showCancelButton: true,\n                              confirmButtonColor: \"#28bb4b\",\n                              cancelButtonColor: \"#f34e4e\",\n                              confirmButtonText: \"Yes, delete it!\",\n                            })\n                            .then(function (result: { value: any }) {\n                              if (result.value) {\n                                swal.fire(\n                                  \"Deleted!\",\n                                  \"Your file has been deleted.\",\n                                  \"success\"\n                                );\n                              }\n                            })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      By passing a parameter, you can execute something else for\n                      \"Cancel\".\n                    </td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-params\"\n                        onClick={() =>\n                          swal\n                            .fire({\n                              title: \"Are you sure?\",\n                              text: \"You won't be able to revert this!\",\n                              icon: \"warning\",\n                              showCancelButton: true,\n                              confirmButtonText: \"Yes, delete it!\",\n                              cancelButtonText: \"No, cancel!\",\n                              confirmButtonClass: \"btn btn-success mt-2\",\n                              cancelButtonClass: \"btn btn-danger ms-2 mt-2\",\n                              buttonsStyling: false,\n                            })\n                            .then(function (result: {\n                              value: any;\n                              dismiss: any;\n                            }) {\n                              if (result.value) {\n                                swal.fire({\n                                  title: \"Deleted!\",\n                                  text: \"Your file has been deleted.\",\n                                  icon: \"success\",\n                                  confirmButtonColor: \"#4a4fea\",\n                                });\n                              } else if (\n                                // Read more about handling dismissals\n                                result.dismiss === swal.DismissReason.cancel\n                              ) {\n                                swal.fire({\n                                  title: \"Cancelled\",\n                                  text: \"Your imaginary file is safe :)\",\n                                  icon: \"error\",\n                                  confirmButtonColor: \"#4a4fea\",\n                                });\n                              }\n                            })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>A message with custom Image Header</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-image\"\n                        onClick={() =>\n                          swal.fire({\n                            title: \"Arita\",\n                            text: \"Responsive Bootstrap 4 Admin Dashboard\",\n                            imageUrl: logosm,\n                            imageHeight: 50,\n                            confirmButtonColor: \"#4a4fea\",\n                            animation: false,\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>A message with auto close timer</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"sa-close\"\n                        onClick={() =>\n                          swal\n                            .fire({\n                              title: \"Auto close alert!\",\n                              html: \"I will close in <strong></strong> seconds.\",\n                              timer: 2000,\n                              onBeforeOpen: function () {\n                                swal.showLoading();\n                                timerInterval = setInterval(function () {\n                                  swal\n                                    .getContent()\n                                    .querySelector(\"strong\").textContent =\n                                    swal.getTimerLeft();\n                                }, 100);\n                              },\n                              onClose: function () {\n                                clearInterval(timerInterval);\n                              },\n                            })\n                            .then(function (result: { dismiss: any }) {\n                              if (\n                                // Read more about handling dismissals\n                                result.dismiss === swal.DismissReason.timer\n                              ) {\n                                console.log(\"I was closed by the timer\");\n                              }\n                            })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Custom HTML description and buttons</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"custom-html-alert\"\n                        onClick={() =>\n                          swal.fire({\n                            title: \"<i>HTML</i> <u>example</u>\",\n                            icon: \"info\",\n                            html:\n                              \"You can use <b>bold text</b>, \" +\n                              '<a href=\"//coderthemes.com/\">links</a> ' +\n                              \"and other HTML tags\",\n                            showCloseButton: true,\n                            showCancelButton: true,\n                            confirmButtonClass: \"btn btn-confirm\",\n                            cancelButtonClass: \"btn btn-cancel ms-1\",\n                            confirmButtonText:\n                              '<i class=\"mdi mdi-thumb-up-outline\"></i> Great!',\n                            cancelButtonText:\n                              '<i class=\"mdi mdi-thumb-down-outline\"></i>',\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>A message with custom width, padding and background</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"custom-padding-width-alert\"\n                        onClick={() =>\n                          swal.fire({\n                            title: \"Custom width, padding, background.\",\n                            width: 600,\n                            padding: 100,\n                            background:\n                              \"#fff url(//subtlepatterns2015.subtlepatterns.netdna-cdn.com/patterns/geometry.png)\",\n                          })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Ajax request example</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"ajax-alert\"\n                        onClick={() =>\n                          swal\n                            .fire({\n                              title: \"Submit email to run ajax request\",\n                              input: \"email\",\n                              showCancelButton: true,\n                              confirmButtonText: \"Submit\",\n                              showLoaderOnConfirm: true,\n                              confirmButtonColor: \"#4a4fea\",\n                              cancelButtonColor: \"#f34e4e\",\n                              preConfirm: function (email: string) {\n                                return new Promise<void>(function (\n                                  resolve,\n                                  reject\n                                ) {\n                                  setTimeout(function () {\n                                    if (email === \"taken@example.com\") {\n                                      reject(\"This email is already taken.\");\n                                    } else {\n                                      resolve();\n                                    }\n                                  }, 2000);\n                                });\n                              },\n                              allowOutsideClick: false,\n                            })\n                            .then(function (email: string) {\n                              swal.fire({\n                                icon: \"success\",\n                                title: \"Ajax request finished!\",\n                                confirmButtonColor: \"#4a4fea\",\n                                html: \"Submitted email: \" + email,\n                              });\n                            })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Chaining modals (queue) example</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"chaining-alert\"\n                        onClick={() =>\n                          swal\n                            .mixin({\n                              input: \"text\",\n                              confirmButtonText: \"Next &rarr;\",\n                              showCancelButton: true,\n                              confirmButtonColor: \"#4a4fea\",\n                              cancelButtonColor: \"#74788d\",\n                              progressSteps: [\"1\", \"2\", \"3\"],\n                            })\n                            .queue([\n                              {\n                                title: \"Question 1\",\n                                text: \"Chaining swal2 modals is easy\",\n                              },\n                              \"Question 2\",\n                              \"Question 3\",\n                            ])\n                            .then(function (result: { value: any }) {\n                              if (result.value) {\n                                swal.fire({\n                                  title: \"All done!\",\n                                  confirmButtonColor: \"#4a4fea\",\n                                  html:\n                                    \"Your answers: <pre><code>\" +\n                                    JSON.stringify(result.value) +\n                                    \"</code></pre>\",\n                                  confirmButtonText: \"Lovely!\",\n                                });\n                              }\n                            })\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Dynamic queue example</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-info btn-xs\"\n                        id=\"dynamic-alert\"\n                        onClick={() =>\n                          swal\n                            .queue([\n                              {\n                                title: \"Your public IP\",\n                                confirmButtonColor: \"#4a4fea\",\n                                confirmButtonText: \"Show my public IP\",\n                                text:\n                                  \"Your public IP will be received \" +\n                                  \"via AJAX request\",\n                                showLoaderOnConfirm: true,\n                                preConfirm: function () {\n                                  return new Promise<void>(function (resolve) {\n                                    fetch(\"https://api.ipify.org?format=json\")\n                                      .then((response) => {\n                                        return response.json();\n                                      })\n                                      .then((data) => {\n                                        swal.insertQueueStep(data.ip);\n                                        resolve();\n                                      });\n                                  });\n                                },\n                              },\n                            ])\n                            .catch(swal.noop)\n                        }\n                      >\n                        Click me\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n});\n\nexport default SweetAlerts;\n"],"names":["SweetAlerts","withSwal","props","timerInterval","swal","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","Card","className","style","width","type","id","onClick","fire","text","icon","imageUrl","imageHeight","imageAlt","position","showConfirmButton","timer","footer","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","cancelButtonText","confirmButtonClass","cancelButtonClass","buttonsStyling","dismiss","DismissReason","cancel","logosm","animation","html","onBeforeOpen","showLoading","setInterval","getContent","querySelector","textContent","getTimerLeft","onClose","clearInterval","console","log","showCloseButton","padding","background","input","showLoaderOnConfirm","preConfirm","email","Promise","resolve","reject","setTimeout","allowOutsideClick","mixin","progressSteps","queue","JSON","stringify","fetch","response","json","data","insertQueueStep","ip","catch","noop"],"sourceRoot":""}