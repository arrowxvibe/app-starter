{"version":3,"file":"static/js/6667.a012b8bf.chunk.js","mappings":"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","sources":["pages/auth2/Register2.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Navigate, Link } from \"react-router-dom\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport classNames from \"classnames\";\n\n// actions\nimport { resetAuth, signupUser } from \"../../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\n// components\nimport { VerticalForm, FormInput } from \"../../components/\";\n\nimport AuthLayout from \"./AuthLayout\";\n\ninterface UserData {\n  fullname: string;\n  email: string;\n  password: string;\n}\n\n/* bottom link */\nconst BottomLink = () => {\n  const { t } = useTranslation();\n\n  return (\n    <footer className=\"footer footer-alt\">\n      <p className=\"text-muted\">\n        {t(\"Already have account?\")}{\" \"}\n        <Link to={\"/auth/login2\"} className=\"text-muted ms-1\">\n          <b>{t(\"Log In\")}</b>\n        </Link>\n      </p>\n    </footer>\n  );\n};\n\n/* social links */\nconst SocialLinks = () => {\n  const socialLinks = [\n    {\n      variant: \"primary\",\n      icon: \"facebook\",\n    },\n    {\n      variant: \"danger\",\n      icon: \"google\",\n    },\n    {\n      variant: \"info\",\n      icon: \"twitter\",\n    },\n    {\n      variant: \"secondary\",\n      icon: \"github\",\n    },\n  ];\n  return (\n    <>\n      <ul className=\"social-list list-inline mt-3 mb-0\">\n        {(socialLinks || []).map((item, index) => {\n          return (\n            <li key={index} className=\"list-inline-item\">\n              <Link\n                to=\"#\"\n                className={classNames(\n                  \"social-list-item\",\n                  \"border-\" + item.variant,\n                  \"text-\" + item.variant\n                )}\n              >\n                <i className={classNames(\"mdi\", \"mdi-\" + item.icon)}></i>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nconst Register2 = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const { loading, userSignUp, error } = useSelector((state: RootState) => ({\n    loading: state.Auth.loading,\n    error: state.Auth.error,\n    userSignUp: state.Auth.userSignUp,\n  }));\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      fullname: yup.string().required(t(\"Please enter Fullname\")),\n      email: yup.string().required(t(\"Please enter Email address\")),\n      password: yup.string().required(t(\"Please enter Password\")),\n    })\n  );\n\n  /*\n   * handle form submission\n   */\n  const onSubmit = (formData: UserData) => {\n    dispatch(\n      signupUser(formData[\"fullname\"], formData[\"email\"], formData[\"password\"])\n    );\n  };\n\n  return (\n    <>\n      {userSignUp ? <Navigate to={\"/auth/confirm2\"}></Navigate> : null}\n\n      <AuthLayout bottomLinks={<BottomLink />}>\n        <h4 className=\"mt-0\">{t(\"Sign Up\")}</h4>\n        <p className=\"text-muted mb-4\">\n          {t(\n            \"Don't have an account? Create your account, it takes less than a minute.\"\n          )}\n        </p>\n\n        {error && (\n          <Alert variant=\"danger\" className=\"my-2\">\n            {error}\n          </Alert>\n        )}\n\n        <VerticalForm\n          onSubmit={onSubmit}\n          resolver={schemaResolver}\n          defaultValues={{}}\n        >\n          <FormInput\n            label={t(\"Full Name\")}\n            type=\"text\"\n            name=\"fullname\"\n            placeholder={t(\"Enter your name\")}\n            containerClass={\"mb-3\"}\n          />\n          <FormInput\n            label={t(\"Email address\")}\n            type=\"email\"\n            name=\"email\"\n            placeholder={t(\"Enter your email\")}\n            containerClass={\"mb-3\"}\n          />\n          <FormInput\n            label={t(\"Password\")}\n            type=\"password\"\n            name=\"password\"\n            placeholder={t(\"Enter your password\")}\n            containerClass={\"mb-3\"}\n          />\n          <FormInput\n            label={t(\"I accept Terms and Conditions\")}\n            type=\"checkbox\"\n            name=\"checkboxsignup\"\n            containerClass={\"mb-3 text-muted\"}\n          />\n\n          <div className=\"mb-0 d-grid text-center\">\n            <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n              {t(\"Sign Up\")}\n            </Button>\n          </div>\n\n          {/* social links */}\n          <div className=\"text-center mt-4\">\n            <p className=\"text-muted font-16\">{t(\"Sign up using\")}</p>\n            <SocialLinks />\n          </div>\n        </VerticalForm>\n      </AuthLayout>\n    </>\n  );\n};\n\nexport default Register2;\n"],"names":["BottomLink","t","useTranslation","_jsx","className","children","_jsxs","Link","to","SocialLinks","_Fragment","variant","icon","map","item","index","classNames","dispatch","useDispatch","_useSelector","useSelector","state","loading","Auth","error","userSignUp","useEffect","resetAuth","schemaResolver","yupResolver","yup","shape","fullname","required","email","password","Navigate","AuthLayout","bottomLinks","Alert","VerticalForm","onSubmit","formData","signupUser","resolver","defaultValues","FormInput","label","type","name","placeholder","containerClass","Button","disabled"],"sourceRoot":""}