{"version":3,"file":"static/js/4070.453341db.chunk.js","mappings":"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","sources":["pages/forms/Validation.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card, Button, InputGroup, Form } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nconst NormalFormValidation = () => {\n  const [validated, setValidated] = useState<boolean>(false);\n\n  /*\n   * handle form submission\n   */\n  const handleSubmit = (event: any) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Bootstrap Validation - Normal</h4>\n          <p className=\"sub-header\">\n            Provide valuable, actionable feedback to your users with HTML5 form\n            validationâ€“available in all our supported browsers.\n          </p>\n\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"First name\"\n                defaultValue=\"Mark\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom02\">\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Last name\"\n                defaultValue=\"Otto\"\n              />\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustomUsername\">\n              <Form.Label>Username</Form.Label>\n              <InputGroup hasValidation>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please choose a username.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom03\">\n              <Form.Label>City</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"City\" required />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid city.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom04\">\n              <Form.Label>State</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"State\" required />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid state.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"validationCustom05\">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Zip\" required />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid zip.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Check\n                id=\"validation-check\"\n                required\n                label=\"Agree to terms and conditions\"\n                feedback=\"You must agree before submitting.\"\n              />\n            </Form.Group>\n            <Button type=\"submit\">Submit form</Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst FormValidationWithTooltip = () => {\n  const [validated, setValidated] = useState<boolean>(false);\n\n  /*\n   * handle form submission\n   */\n  const handleSubmit = (event: any) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n  };\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Bootstrap Validation (Tooltips)</h4>\n          <p className=\"sub-header\">\n            If your form layout allows it, you can swap the{\" \"}\n            <code>.valid | invalid-feedback</code> classes for{\" \"}\n            <code>.valid | invalid-tooltip</code> classes to display validation\n            feedback in a styled tooltip.\n          </p>\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip01\"\n            >\n              <Form.Label>First name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"First name\"\n                defaultValue=\"Mark\"\n              />\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip02\"\n            >\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                placeholder=\"Last name\"\n                defaultValue=\"Otto\"\n              />\n              <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationCustonTooltipme\"\n            >\n              <Form.Label>Username</Form.Label>\n              <InputGroup hasValidation>\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\" tooltip>\n                  Please choose a username.\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip03\"\n            >\n              <Form.Label>City</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"City\" required />\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n                Please provide a valid city.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip04\"\n            >\n              <Form.Label>State</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"State\" required />\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n                Please provide a valid state.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group\n              className=\"position-relative mb-3\"\n              controlId=\"validationTooltip05\"\n            >\n              <Form.Label>Zip</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Zip\" required />\n              <Form.Control.Feedback type=\"invalid\" tooltip>\n                Please provide a valid zip.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Button type=\"submit\">Submit form</Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst FormValidation = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/validation\" },\n          { label: \"Form Validation\", path: \"/forms/validation\", active: true },\n        ]}\n        title={\"Form Validation\"}\n      />\n\n      <Row>\n        <Col lg={6}>\n          <NormalFormValidation />\n        </Col>\n\n        <Col lg={6}>\n          <FormValidationWithTooltip />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FormValidation;\n"],"names":["NormalFormValidation","_useState","useState","_useState2","_slicedToArray","validated","setValidated","_jsx","_Fragment","children","Card","_jsxs","className","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","controlId","required","type","placeholder","defaultValue","InputGroup","hasValidation","id","label","feedback","Button","FormValidationWithTooltip","_useState3","_useState4","tooltip","React","PageTitle","breadCrumbItems","path","active","title","Row","Col","lg"],"sourceRoot":""}