{"version":3,"file":"static/js/6482.f006e0b1.chunk.js","mappings":"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","sources":["pages/uikit/Progress.tsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React from \"react\";\nimport { Row, Col, Card, ProgressBar } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nconst Basic = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Basic Example</h4>\n        <p className=\"sub-header\"> Default progress bar.</p>\n\n        <ProgressBar className=\"mb-2\" />\n        <ProgressBar now={33} className=\"mb-2\" />\n        <ProgressBar now={66} className=\"mb-2\" />\n        <ProgressBar now={100} className=\"mb-2\" />\n        <ProgressBar now={25} label={\"25%\"} className=\"mb-0\" />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst ContextualAlternatives = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Contextual alternatives</h4>\n        <p className=\"sub-header\">\n          Progress bars use some of the same button and alert classes for\n          consistent styles.\n        </p>\n\n        <ProgressBar now={25} className=\"mb-2\" variant=\"success\" />\n        <ProgressBar now={50} className=\"mb-2\" variant=\"info\" />\n        <ProgressBar now={75} className=\"mb-2\" variant=\"warning\" />\n        <ProgressBar now={100} className=\"mb-2\" variant=\"danger\" />\n        <ProgressBar className=\"mb-0\">\n          <ProgressBar variant=\"primary\" now={15} key={1} />\n          <ProgressBar variant=\"success\" now={30} key={2} />\n          <ProgressBar variant=\"info\" now={20} key={3} />\n        </ProgressBar>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Striped = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Striped example</h4>\n        <p className=\"sub-header\">\n          Uses a gradient to create a striped effect.\n        </p>\n\n        <ProgressBar now={10} className=\"mb-2\" striped />\n        <ProgressBar now={25} className=\"mb-2\" variant=\"success\" striped />\n        <ProgressBar now={50} className=\"mb-2\" variant=\"info\" striped />\n        <ProgressBar now={75} className=\"mb-2\" variant=\"warning\" striped />\n        <ProgressBar now={100} className=\"mb-2\" variant=\"danger\" striped />\n        <ProgressBar now={75} className=\"mb-0\" striped animated />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst Sizes = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Size example</h4>\n        <p className=\"sub-header\">\n          We only set a <code>height</code> value on the <code>.progress</code>,\n          so if you change that value the inner <code>.progress-bar</code> will\n          automatically resize accordingly.\n        </p>\n\n        <ProgressBar now={70} className=\"mb-2\" style={{ height: 1 }} />\n        <ProgressBar now={30} className=\"progress-sm mb-2\" />\n        <ProgressBar now={25} className=\"mb-2 progress-md\" variant=\"success\" />\n        <ProgressBar now={50} className=\"mb-2 progress-lg\" variant=\"info\" />\n        <ProgressBar now={75} className=\"mb-2 progress-xl\" variant=\"warning\" />\n        <ProgressBar now={38} className=\"mb-0 progress-xxl\" variant=\"danger\" />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst VerticalProgress = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Progressbar Vertical</h4>\n          <p className=\"sub-header\">\n            Use class <code>.progress-vertical</code>.\n          </p>\n          <ProgressBar className=\"progress-vertical\">\n            <ProgressBar style={{ height: \"10%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical\">\n            <ProgressBar variant=\"success\" style={{ height: \"25%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical progress-lg\">\n            <ProgressBar variant=\"info\" style={{ height: \"50%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical progress-xl\">\n            <ProgressBar variant=\"warning\" style={{ height: \"75%\" }} />\n          </ProgressBar>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst VerticalBottomProgress = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Progressbar Vertical Bottom</h4>\n          <p className=\"sub-header\">\n            Use class <code>.progress-vertical-bottom</code>.\n          </p>\n          <ProgressBar className=\"progress-vertical-bottom\">\n            <ProgressBar style={{ height: \"10%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical-bottom\">\n            <ProgressBar variant=\"success\" style={{ height: \"25%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical-bottom progress-lg\">\n            <ProgressBar variant=\"info\" style={{ height: \"50%\" }} />\n          </ProgressBar>\n          <ProgressBar className=\"progress-vertical-bottom progress-xl\">\n            <ProgressBar variant=\"warning\" style={{ height: \"75%\" }} />\n          </ProgressBar>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst ProgressBarExamples = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/progressBar\" },\n          { label: \"Progress\", path: \"/ui/progressBar\", active: true },\n        ]}\n        title={\"Progress\"}\n      />\n\n      <Row>\n        <Col md={6}>\n          <Basic />\n        </Col>\n        <Col md={6}>\n          <ContextualAlternatives />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <Striped />\n        </Col>\n        <Col md={6}>\n          <Sizes />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <VerticalProgress />\n        </Col>\n        <Col md={6}>\n          <VerticalBottomProgress />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default ProgressBarExamples;\n","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"names":["Basic","_jsx","Card","children","_jsxs","className","ProgressBar","now","label","ContextualAlternatives","variant","Striped","striped","animated","Sizes","style","height","VerticalProgress","_Fragment","VerticalBottomProgress","React","PageTitle","breadCrumbItems","path","active","title","Row","Col","md","map","func","index","child","forEach","ROUND_PRECISION","getPercentage","min","max","percentage","Math","round","renderProgressBar","_ref","ref","_classNames","visuallyHidden","bsPrefix","props","_objectWithoutProperties","_excluded","_objectSpread","role","classNames","concat","_defineProperty","width","_ref2","isChild","_excluded2","useBootstrapPrefix","wrapperProps","_excluded3","cloneElement","displayName","defaultProps"],"sourceRoot":""}