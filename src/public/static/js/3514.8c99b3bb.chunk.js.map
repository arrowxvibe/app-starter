{"version":3,"file":"static/js/3514.8c99b3bb.chunk.js","mappings":"+PAwBMA,EAAa,WACjB,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACEE,EAAAA,EAAAA,KAAA,UAAQC,UAAU,oBAAmBC,UACnCC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,aAAYC,SAAA,CACtBJ,EAAE,WAAY,KACfE,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAI,eAAgBJ,UAAU,kBAAiBC,UACnDF,EAAAA,EAAAA,KAAA,KAAAE,SAAIJ,EAAE,kBAKhB,EA6EA,UA3EwB,WACtB,IAAMQ,GAAWC,EAAAA,EAAAA,MACTT,GAAMC,EAAAA,EAAAA,KAAND,GAERU,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACX,GAAG,CAACH,IAEJ,IAAAI,GAAgEC,EAAAA,EAAAA,KAC9D,SAACC,GAAgB,MAAM,CACrBC,QAASD,EAAME,KAAKD,QACpBE,qBAAsBH,EAAME,KAAKC,qBACjCC,MAAOJ,EAAME,KAAKE,MAClBC,cAAeL,EAAME,KAAKG,cAC3B,IANKJ,EAAOH,EAAPG,QAASI,EAAaP,EAAbO,cAAeF,EAAoBL,EAApBK,qBAAsBC,EAAKN,EAALM,MAYhDE,GAAiBC,EAAAA,EAAAA,GACrBC,EAAAA,KAAaC,MAAM,CACjBC,SAAUF,EAAAA,KAAaG,SAASzB,EAAE,6BAWtC,OACEE,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAtB,UACEC,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACC,aAAa1B,EAAAA,EAAAA,KAACH,EAAU,IAAIK,SAAA,EACtCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMC,SAAEJ,EAAE,uBACxBE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAiBC,SAC3BJ,EACC,mGAIHiB,IACCf,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CAACC,QAAQ,UAAS1B,SAAEa,EAAqBc,UAGhDb,IACChB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CAACC,QAAQ,SAAS3B,UAAU,OAAMC,SACrCc,KAIHC,IACAd,EAAAA,EAAAA,MAAC2B,EAAAA,EAAY,CAACC,SAzBL,SAACC,GAChB1B,GAAS2B,EAAAA,EAAAA,IAAeD,EAAmB,UAC7C,EAuB0CE,SAAUhB,EAAehB,SAAA,EACzDF,EAAAA,EAAAA,KAACmC,EAAAA,EAAS,CACRC,MAAOtC,EAAE,YACTuC,KAAK,OACLC,KAAK,WACLC,YAAazC,EAAE,uBACf0C,eAAgB,UAGlBxC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCF,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACb,QAAQ,UAAUS,KAAK,SAASK,SAAU7B,EAAQX,SACvDJ,EAAE,6BAQnB,C","sources":["pages/auth2/ForgetPassword2.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\n// actions\nimport { resetAuth, forgotPassword } from \"../../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\n// components\nimport { VerticalForm, FormInput } from \"../../components\";\n\nimport AuthLayout from \"./AuthLayout\";\n\ninterface UserData {\n  username: string;\n}\n\n/* bottom links */\nconst BottomLink = () => {\n  const { t } = useTranslation();\n\n  return (\n    <footer className=\"footer footer-alt\">\n      <p className=\"text-muted\">\n        {t(\"Back to\")}{\" \"}\n        <Link to={\"/auth/login2\"} className=\"text-muted ms-1\">\n          <b>{t(\"Log in\")}</b>\n        </Link>\n      </p>\n    </footer>\n  );\n};\n\nconst ForgetPassword2 = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, passwordReset, resetPasswordSuccess, error } = useSelector(\n    (state: RootState) => ({\n      loading: state.Auth.loading,\n      resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n      error: state.Auth.error,\n      passwordReset: state.Auth.passwordReset,\n    })\n  );\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      username: yup.string().required(t(\"Please enter Username\")),\n    })\n  );\n\n  /*\n   * handle form submission\n   */\n  const onSubmit = (formData: UserData) => {\n    dispatch(forgotPassword(formData[\"username\"]));\n  };\n\n  return (\n    <>\n      <AuthLayout bottomLinks={<BottomLink />}>\n        <h4 className=\"mt-0\">{t(\"Recover Password\")}</h4>\n        <p className=\"text-muted mb-4\">\n          {t(\n            \"Enter your email address and we'll send you an email with instructions to reset your password\"\n          )}\n        </p>\n\n        {resetPasswordSuccess && (\n          <Alert variant=\"success\">{resetPasswordSuccess.message}</Alert>\n        )}\n\n        {error && (\n          <Alert variant=\"danger\" className=\"my-2\">\n            {error}\n          </Alert>\n        )}\n\n        {!passwordReset && (\n          <VerticalForm onSubmit={onSubmit} resolver={schemaResolver}>\n            <FormInput\n              label={t(\"Username\")}\n              type=\"text\"\n              name=\"username\"\n              placeholder={t(\"Enter your Username\")}\n              containerClass={\"mb-3\"}\n            />\n\n            <div className=\"mb-0 text-center d-grid\">\n              <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n                {t(\"Reset Password\")}\n              </Button>\n            </div>\n          </VerticalForm>\n        )}\n      </AuthLayout>\n    </>\n  );\n};\n\nexport default ForgetPassword2;\n"],"names":["BottomLink","t","useTranslation","_jsx","className","children","_jsxs","Link","to","dispatch","useDispatch","useEffect","resetAuth","_useSelector","useSelector","state","loading","Auth","resetPasswordSuccess","error","passwordReset","schemaResolver","yupResolver","yup","shape","username","required","_Fragment","AuthLayout","bottomLinks","Alert","variant","message","VerticalForm","onSubmit","formData","forgotPassword","resolver","FormInput","label","type","name","placeholder","containerClass","Button","disabled"],"sourceRoot":""}