{"version":3,"file":"static/js/5030.f3acf942.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","pages/forms/Advanced.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface HyperDatepickerProps {\n  value: Date;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst HyperDatepicker = (props: HyperDatepickerProps) => {\n  // handle custom input\n  // ;\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    ) : (\n      <DatepickerInputWithAddon\n        inputClass={props.inputClass!}\n        value={props.value?.toDateString()}\n      />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        customInput={input}\n        timeIntervals={props.tI}\n        selected={props.value}\n        value={props.value.toDateString()}\n        onChange={(date) => props.onChange(date)}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default HyperDatepicker;\n","import React, { useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport MaskedInput from \"react-text-mask\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport HyperDatepicker from \"../../components/Datepicker\";\n\nconst ReactSelect = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to=\"https://github.com/JedWatson/react-select\"\n            target=\"_blank\"\n          >\n            React select\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n        <p className=\"text-muted font-14\">React-Select based Select element</p>\n        <Select\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n        ></Select>\n\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n        <p className=\"text-muted font-14\">\n          React-Select based Select (Multiple) element\n        </p>\n        <Select\n          isMulti={true}\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n        ></Select>\n      </Card.Body>\n    </Card>\n  );\n};\n\ninterface OptionTypes {\n  id: number | string;\n  value: string;\n  label: string;\n}\nconst Typeaheads = () => {\n  const [singleSelections, setSingleSelections] = useState<OptionTypes[]>([]);\n  const [multiSelections, setMultiSelections] = useState<OptionTypes[]>([]);\n\n  const options: Array<OptionTypes> = [\n    { id: 1, value: \"chocolate\", label: \"Chocolate\" },\n    { id: 2, value: \"strawberry\", label: \"Strawberry\" },\n    { id: 3, value: \"vanilla\", label: \"Vanilla\" },\n  ];\n\n  const onChangeSingleSelection = (selected: OptionTypes[]) => {\n    setSingleSelections(selected);\n  };\n\n  const onChangeMultipleSelection = (selected: OptionTypes[]) => {\n    setMultiSelections(selected);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to=\"http://ericgio.github.io/react-bootstrap-typeahead/\"\n            target=\"_blank\"\n          >\n            Typeahead\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n        <p className=\"text-muted font-14\">Typeahead based Select element</p>\n        <Typeahead\n          id=\"select2\"\n          labelKey={\"label\"}\n          multiple={false}\n          onChange={onChangeSingleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={singleSelections}\n        />\n\n        <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n        <p className=\"text-muted font-14\">\n          Typeahead based Select (Multiple) element\n        </p>\n        <Typeahead\n          id=\"select3\"\n          labelKey=\"label\"\n          multiple\n          onChange={onChangeMultipleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={multiSelections}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst DatePickers = () => {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n        <p className=\"text-muted font-14\">\n          A simple date picker using{\" \"}\n          <Link to=\"https://reactdatepicker.com/\">ReactJS Datepicker</Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Single Date</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">\n                Single Date with multiple months\n              </label>{\" \"}\n              <br />\n              <HyperDatepicker\n                hideAddon={true}\n                monthsShown={2}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Custom date format</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                dateFormat=\"yyyy-MM-dd\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Specific date range</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                minDate={new Date()}\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select Time</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                tI={60}\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                timeCaption=\"time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time only</label> <br />\n              <HyperDatepicker\n                hideAddon={true}\n                showTimeSelect\n                showTimeSelectOnly\n                tI={60}\n                dateFormat=\"h:mm aa\"\n                timeCaption=\"Time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst InputMasks = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Input Masks</h4>\n        <p className=\"text-muted font-14\">\n          Input masks by{\" \"}\n          <Link to=\"https://github.com/text-mask/text-mask/tree/master/react#readme\">\n            react-text-mask\n          </Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Phone Number with Area Code</label>{\" \"}\n              <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(__) ____-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">US Phone Number</label> <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(___) ___-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Date</label> <br />\n              <MaskedInput\n                mask={[\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"__/__/____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time</label> <br />\n              <MaskedInput\n                mask={[/\\d/, /\\d/, \":\", /\\d/, /\\d/, \":\", /\\d/, /\\d/]}\n                placeholder=\"__:__:__\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst FormAdvanced = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/advanced\" },\n          { label: \"Form Advanced\", path: \"/forms/advanced\", active: true },\n        ]}\n        title={\"Form Advanced\"}\n      />\n\n      <Row>\n        <Col lg={6}>\n          <ReactSelect />\n        </Col>\n        <Col lg={6}>\n          <Typeaheads />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <DatePickers />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <InputMasks />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FormAdvanced;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","_props$value","_props$value2","input","hideAddon","toDateString","_Fragment","DatePicker","customInput","timeIntervals","tI","selected","date","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","ReactSelect","Card","Link","rel","to","target","Select","classNamePrefix","options","label","isMulti","Typeaheads","_useState","useState","_useState2","_slicedToArray","singleSelections","setSingleSelections","_useState3","_useState4","multiSelections","setMultiSelections","id","Typeahead","labelKey","multiple","placeholder","DatePickers","_useState5","Date","_useState6","selectedDate","setSelectedDate","onDateChange","Row","Col","lg","HyperDatepicker","setDate","getDate","InputMasks","MaskedInput","mask","React","PageTitle","breadCrumbItems","path","active","title"],"sourceRoot":""}