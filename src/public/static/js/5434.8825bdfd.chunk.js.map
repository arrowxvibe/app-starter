{"version":3,"file":"static/js/5434.8825bdfd.chunk.js","mappings":"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","sources":["../node_modules/spin.js/spin.js","pages/uikit/LoadingButtons.tsx","../node_modules/react-ladda-button/src/index.tsx"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign(__assign({}, defaults), opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n","import React, { useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport LaddaButton, {\n  EXPAND_LEFT,\n  EXPAND_RIGHT,\n  EXPAND_UP,\n  EXPAND_DOWN,\n  CONTRACT,\n  CONTRACT_OVERLAY,\n  ZOOM_OUT,\n  ZOOM_IN,\n  SLIDE_LEFT,\n  SLIDE_RIGHT,\n  SLIDE_UP,\n  SLIDE_DOWN,\n} from \"react-ladda-button\";\n\n// styles\nimport \"react-ladda-button/dist/ladda-themeless.min.css\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nconst withLoadingHook =\n  <P extends object>(Component: React.ComponentType<P>): any =>\n  ({ ...props }: any) => {\n    const [loading, setLoading] = useState<boolean>(false);\n    return (\n      <Component\n        {...(props as P)}\n        loading={loading}\n        onClick={() => {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n          }, 3000);\n        }}\n      />\n    );\n  };\n\nconst withProgressHook =\n  <P extends object>(Component: React.ComponentType<P>): any =>\n  ({ ...props }: any) => {\n    const [progress, setProgress] = useState<number | null>(null);\n    return (\n      <Component\n        {...(props as P)}\n        loading={!!progress}\n        progress={progress}\n        onClick={() => {\n          setProgress(0.01);\n          const inc = () => {\n            setTimeout(() => {\n              let nv = 0;\n              setProgress((p: any) => {\n                nv = p + 0.05;\n                return nv;\n              });\n              if (nv < 1) inc();\n              else\n                setTimeout(() => {\n                  setProgress(null);\n                }, 75);\n            }, Math.random() * (500 - 100) + 100);\n          };\n          inc();\n        }}\n      />\n    );\n  };\n\nconst ExLoadingLaddaButton = withLoadingHook(LaddaButton);\nconst ExProgressLaddaButton = withProgressHook(LaddaButton);\n\nconst LoadingButtons = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Extended UI\", path: \"/extended-ui/loading-buttons\" },\n          {\n            label: \"Loading Buttons\",\n            path: \"/extended-ui/loading-buttons\",\n            active: true,\n          },\n        ]}\n        title={\"Loading Buttons\"}\n      />\n\n      <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <h4 className=\"header-title\">Examples</h4>\n              <p className=\"sub-header\">\n                Buttons with built-in loading indicators.\n              </p>\n\n              <Row className=\"text-center\">\n                {(\n                  [EXPAND_LEFT, EXPAND_RIGHT, EXPAND_UP, EXPAND_DOWN] as const\n                ).map((sv) => (\n                  <Col key={sv} sm={6} xl={3}>\n                    <div className=\"p-3\">\n                      <h5 className=\"text-muted\">{sv}</h5>\n                      <ExLoadingLaddaButton\n                        data-style={sv}\n                        className=\"btn btn-primary\"\n                        dir=\"ltr\"\n                      >\n                        Submit\n                      </ExLoadingLaddaButton>\n                    </div>\n                  </Col>\n                ))}\n              </Row>\n              <Row className=\"text-center\">\n                {([CONTRACT, CONTRACT_OVERLAY, ZOOM_IN, ZOOM_OUT] as const).map(\n                  (sv) => (\n                    <Col key={sv} sm={6} xl={3}>\n                      <div className=\"p-3\">\n                        <h5 className=\"text-muted\">{sv}</h5>\n                        <ExLoadingLaddaButton\n                          data-style={sv}\n                          className=\"btn btn-warning\"\n                          dir=\"ltr\"\n                        >\n                          Submit\n                        </ExLoadingLaddaButton>\n                      </div>\n                    </Col>\n                  )\n                )}\n              </Row>\n\n              <Row className=\"text-center\">\n                {([SLIDE_LEFT, SLIDE_RIGHT, SLIDE_UP, SLIDE_DOWN] as const).map(\n                  (sv) => (\n                    <Col key={sv} sm={6} xl={3}>\n                      <div className=\"p-3\">\n                        <h5 className=\"text-muted\">{sv}</h5>\n                        <ExLoadingLaddaButton\n                          data-style={sv}\n                          className=\"btn btn-info\"\n                          dir=\"ltr\"\n                        >\n                          Submit\n                        </ExLoadingLaddaButton>\n                      </div>\n                    </Col>\n                  )\n                )}\n              </Row>\n\n              <Row className=\"text-center\">\n                {([EXPAND_RIGHT, CONTRACT] as const).map((sv) => (\n                  <Col key={sv} sm={6} xl={3}>\n                    <div className=\"p-3\">\n                      <h5 className=\"text-muted\">{sv}</h5>\n                      <ExProgressLaddaButton\n                        data-style={sv}\n                        className=\"btn btn-danger\"\n                        dir=\"ltr\"\n                      >\n                        Submit\n                      </ExProgressLaddaButton>\n                    </div>\n                  </Col>\n                ))}\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default LoadingButtons;\n","import React, { useEffect, useRef } from 'react';\nimport { Spinner } from 'spin.js';\n\nexport const XS = 'xs'\nexport const S = 's'\nexport const L = 'l'\nexport const XL = 'xl'\n\nexport const SIZES = [XS, S, L, XL] as const\n\nexport const CONTRACT = 'contract'\nexport const CONTRACT_OVERLAY = 'contract-overlay'\nexport const EXPAND_LEFT = 'expand-left'\nexport const EXPAND_RIGHT = 'expand-right'\nexport const EXPAND_UP = 'expand-up'\nexport const EXPAND_DOWN = 'expand-down'\nexport const SLIDE_LEFT = 'slide-left'\nexport const SLIDE_RIGHT = 'slide-right'\nexport const SLIDE_UP = 'slide-up'\nexport const SLIDE_DOWN = 'slide-down'\nexport const ZOOM_IN = 'zoom-in'\nexport const ZOOM_OUT = 'zoom-out'\n\nexport const STYLES = [\n  EXPAND_LEFT,\n  EXPAND_RIGHT,\n  EXPAND_UP,\n  EXPAND_DOWN,\n  CONTRACT,\n  CONTRACT_OVERLAY,\n  ZOOM_IN,\n  ZOOM_OUT,\n  SLIDE_LEFT,\n  SLIDE_RIGHT,\n  SLIDE_UP,\n  SLIDE_DOWN,\n] as const\n\nexport interface LaddaButtonProps {\n  className?: string;\n  progress?: number;\n  loading?: boolean;\n  disabled?: boolean;\n  'data-color'?: string;\n  'data-size'?: typeof SIZES[number];\n  'data-style'?: typeof STYLES[number];\n  'data-spinner-size'?: number;\n  'data-spinner-color'?: string;\n  'data-spinner-lines'?: number;\n}\n\nexport const LaddaButton: React.FC<LaddaButtonProps & React.ButtonHTMLAttributes<HTMLButtonElement>> = React.memo(\n  ({className, children, disabled, loading, progress, ...restProps}) => {\n  \n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const spinner = useRef<Spinner>();\n  const timer = useRef<any>();\n\n  useEffect(() => {\n    if(loading){\n      timer.current && clearTimeout(timer.current);\n      const createSpinner = () => {\n        var height = buttonRef.current ? buttonRef.current.offsetHeight : 0,\n            spinnerColor,\n            spinnerLines;\n    \n        if (height === 0) {\n            // We may have an element that is not visible so\n            // we attempt to get the height in a different way\n            if(buttonRef.current)\n              height = parseFloat(window.getComputedStyle(buttonRef.current).height);\n        }\n    \n        // If the button is tall we can afford some padding\n        if (height > 32) {\n            height *= 0.8;\n        }\n    \n        // Prefer an explicit height if one is defined\n        if (restProps[\"data-spinner-size\"]) {\n            height = restProps[\"data-spinner-size\"] || 10;\n        }\n    \n        // Allow buttons to specify the color of the spinner element\n        if (restProps['data-spinner-color']) {\n            spinnerColor = restProps['data-spinner-color'];\n        }\n    \n        // Allow buttons to specify the number of lines of the spinner\n        if (restProps['data-spinner-lines']) {\n            spinnerLines = restProps['data-spinner-lines'] || 12\n        }\n    \n        var radius = height * 0.2,\n            length = radius * 0.6,\n            width = radius < 7 ? 2 : 3;\n    \n        return new Spinner({\n            color: spinnerColor || '#fff',\n            lines: spinnerLines || 12,\n            radius: radius,\n            length: length,\n            width: width,\n            animation: 'ladda-spinner-line-fade',\n            top: 'auto',\n            left: 'auto',\n            className: ''\n        });\n      }\n\n      if(!spinner.current) spinner.current = createSpinner();\n        spinner.current?.spin(buttonRef.current?.querySelector('.ladda-spinner') as HTMLElement||undefined);\n    } else{\n      if (spinner) {\n        //make sure the spinner keeps spinning for the button contracting animation\n        const tv = timer.current = setTimeout(function() { spinner.current?.stop(); }, 1000);\n        return ()=>clearTimeout(tv);\n      }\n    }\n\n    //ts doesn't like sometimesy returns\n    return undefined;\n  }, [loading])\n\n  const dloadingProp = loading ? {'data-loading':''} : {};\n  restProps = {...restProps, 'data-style': restProps['data-style'] || EXPAND_LEFT}; //set default data-style\n\n  return (\n    <button\n      {...dloadingProp}\n      {...restProps}\n      className={`ladda-button ${className || ''}`}\n      ref={buttonRef}\n      disabled={disabled || loading}\n    >\n      <span className=\"ladda-label\">{children}</span>\n      <span className=\"ladda-spinner\"></span>\n      {!!progress &&\n        <div\n          className=\"ladda-progress\"\n          style={{width: ((Math.max(Math.min(progress||0, 1), 0)) * (buttonRef.current?.offsetWidth||0)) + 'px'}}>\n        </div>\n      }\n    </button>\n  )\n});\n\nexport default LaddaButton;"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","defaults","lines","width","radius","scale","corners","color","fadeColor","animation","rotate","direction","speed","zIndex","className","top","left","shadow","position","Spinner","opts","spin","target","stop","el","document","createElement","setAttribute","css","transform","insertBefore","firstChild","borderRadius","Math","round","shadows","boxShadow","regex","_i","_a","split","matches","match","x","y","xUnits","yUnits","push","prefix","end","parseBoxShadow","degrees","backgroundLine","height","background","getColor","transformOrigin","delay","line","normalizeShadow","appendChild","drawLines","requestAnimationFrame","cancelAnimationFrame","animateId","clearTimeout","parentNode","removeChild","undefined","props","prop","style","idx","normalized","shadows_1","xy","convertOffset","join","radians","PI","sin","cos","Component","CONTRACT","CONTRACT_OVERLAY","EXPAND_LEFT","EXPAND_RIGHT","EXPAND_UP","EXPAND_DOWN","SLIDE_LEFT","SLIDE_RIGHT","SLIDE_UP","SLIDE_DOWN","ZOOM_IN","ZOOM_OUT","React","_ref","children","disabled","loading","progress","restProps","_objectWithoutPropertiesLoose","buttonRef","useRef","spinner","timer","useEffect","_spinner$current","_buttonRef$current","current","spinnerColor","spinnerLines","offsetHeight","parseFloat","window","getComputedStyle","createSpinner","querySelector","tv","setTimeout","_spinner$current2","dloadingProp","_extends","ref","max","min","_buttonRef$current2","offsetWidth","ExLoadingLaddaButton","LaddaButton","_useState","useState","_useState2","_slicedToArray","setLoading","_jsx","_objectSpread","onClick","ExProgressLaddaButton","_ref2","_useState3","_useState4","setProgress","inc","nv","random","withProgressHook","_jsxs","_Fragment","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","Card","map","sv","sm","xl","dir"],"sourceRoot":""}