{"version":3,"file":"static/js/4882.5aec607e.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/usePlaceholder.js","../node_modules/react-bootstrap/esm/PlaceholderButton.js","../node_modules/react-bootstrap/esm/Placeholder.js","pages/uikit/Placeholders.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { useCol } from './Col';\nexport default function usePlaceholder({\n  animation,\n  bg,\n  bsPrefix,\n  size,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'placeholder');\n  const [{\n    className,\n    ...colProps\n  }] = useCol(props);\n  return { ...colProps,\n    className: classNames(className, animation ? `${bsPrefix}-${animation}` : bsPrefix, size && `${bsPrefix}-${size}`, bg && `bg-${bg}`)\n  };\n}","import * as React from 'react';\nimport Button from './Button';\nimport usePlaceholder from './usePlaceholder';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PlaceholderButton = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Button, { ...placeholderProps,\n    ref: ref,\n    disabled: true,\n    tabIndex: -1\n  });\n});\nPlaceholderButton.displayName = 'PlaceholderButton';\nexport default PlaceholderButton;","import * as React from 'react';\nimport usePlaceholder from './usePlaceholder';\nimport PlaceholderButton from './PlaceholderButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Placeholder = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Component, { ...placeholderProps,\n    ref: ref\n  });\n});\nPlaceholder.displayName = 'Placeholder';\nexport default Object.assign(Placeholder, {\n  Button: PlaceholderButton\n});","import React from \"react\";\nimport { Card, Col, Row, Button, Placeholder } from \"react-bootstrap\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\n\nimport img1 from \"../../assets/images/small/img-5.jpg\";\nimport img2 from \"../../assets/images/small/img-3.jpg\";\n\nconst BasicPlaceholders = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Placeholders</h4>\n          <p className=\"text-muted\">\n            In the example below, we take a typical card component and recreate\n            it with placeholders applied to create a “loading card”. Size and\n            proportions are the same between the two.\n          </p>\n\n          <Row>\n            <Col md={6}>\n              <Card className=\"border shadow-none\">\n                <Card.Img variant=\"top\" src={img1} />\n                <Card.Body>\n                  <Card.Title>Card Title</Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card's content.\n                  </Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col md={6}>\n              <Card className=\"border shadow-none mb-0\">\n                <Card.Img variant=\"top\" src={img2} />\n                <Card.Body>\n                  <Placeholder as={Card.Title} animation=\"glow\">\n                    <Placeholder xs={6} />\n                  </Placeholder>\n                  <Placeholder as={Card.Text} animation=\"glow\">\n                    <Placeholder xs={7} /> <Placeholder xs={4} />{\" \"}\n                    <Placeholder xs={4} /> <Placeholder xs={6} />{\" \"}\n                    <Placeholder xs={8} />\n                  </Placeholder>\n                  <Placeholder.Button variant=\"primary\" xs={6} />\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWidth = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Width</h4>\n          <p className=\"text-muted\">\n            You can change the <code>width</code> through grid column classes,\n            width utilities, or inline styles.\n          </p>\n          <Placeholder xs={6} />\n          <Placeholder className=\"w-75\" /> <br />\n          <Placeholder style={{ width: \"25%\" }} />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersAnimation = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Animation</h4>\n          <p className=\"text-muted\">\n            Animate placeholders by setting the prop <code>animation</code> to{\" \"}\n            <code>glow</code> or <code>wave</code> to better convey the\n            perception of something being <em>actively</em> loaded.\n          </p>\n\n          <Placeholder as=\"p\" animation=\"glow\">\n            <Placeholder xs={12} />\n          </Placeholder>\n          <Placeholder as=\"p\" animation=\"wave\" className=\"mb-0\">\n            <Placeholder xs={12} />\n          </Placeholder>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWithVariants = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Color</h4>\n          <p className=\"text-muted\">\n            By default, the <code>placeholder</code> uses{\" \"}\n            <code>currentColor</code>. This can be overriden with a custom color\n            or utility class.\n          </p>\n\n          <Placeholder xs={12} />\n\n          <Placeholder xs={12} bg=\"primary\" />\n          <Placeholder xs={12} bg=\"secondary\" />\n          <Placeholder xs={12} bg=\"success\" />\n          <Placeholder xs={12} bg=\"danger\" />\n          <Placeholder xs={12} bg=\"warning\" />\n          <Placeholder xs={12} bg=\"info\" />\n          <Placeholder xs={12} bg=\"light\" />\n          <Placeholder xs={12} bg=\"dark\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersConcept = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">How it works</h4>\n          <p className=\"text-muted\">\n            Create placeholders with the <code>Placeholder</code> component and\n            a grid column prop (e.g., <code>xs={6}</code>) to set the{\" \"}\n            <code>width</code>. They can replace the text inside an element or\n            be added to an existing component via the <code>as</code> prop.\n          </p>\n\n          <p aria-hidden=\"true\">\n            <Placeholder xs={6} />\n          </p>\n\n          <Placeholder.Button xs={4} aria-hidden=\"true\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst PlaceholdersWithSizes = () => {\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h4 className=\"header-title\">Sizing</h4>\n          <p className=\"text-muted\">\n            The size of <code>placeholder</code>s are based on the typographic\n            style of the parent element. Customize them with sizing props:{\" \"}\n            <code>lg</code>, <code>sm</code>, or <code>xs</code>.\n          </p>\n\n          <Placeholder xs={12} size=\"lg\" />\n          <Placeholder xs={12} />\n          <Placeholder xs={12} size=\"sm\" />\n          <Placeholder xs={12} size=\"xs\" />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst Placeholders = () => {\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Base UI\", path: \"/ui/placeholders\" },\n          { label: \"Placeholders\", path: \"/ui/placeholders\", active: true },\n        ]}\n        title={\"Placeholders\"}\n      />\n      <Row>\n        <Col xl={6}>\n          <BasicPlaceholders />\n          <PlaceholdersWidth />\n        </Col>\n        <Col xl={6}>\n          <PlaceholdersWithVariants />\n          <PlaceholdersConcept />\n          <PlaceholdersWithSizes />\n        </Col>\n        <Col xl={6}>\n          <PlaceholdersAnimation />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Placeholders;\n"],"names":["usePlaceholder","_ref","animation","bg","bsPrefix","size","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","_useCol","useCol","_useCol2$","_slicedToArray","className","colProps","_excluded2","_objectSpread","classNames","concat","PlaceholderButton","React","ref","placeholderProps","_jsx","Button","disabled","tabIndex","displayName","Placeholder","_ref$as","as","Component","Object","assign","BasicPlaceholders","_Fragment","children","Card","_jsxs","Row","Col","md","variant","src","img1","img2","xs","PlaceholdersWidth","style","width","PlaceholdersAnimation","PlaceholdersWithVariants","PlaceholdersConcept","PlaceholdersWithSizes","PageTitle","breadCrumbItems","label","path","active","title","xl"],"sourceRoot":""}