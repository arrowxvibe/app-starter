{"version":3,"file":"static/js/86.5597213d.chunk.js","mappings":"wRAMA,EAJiB,WACf,OAAO,IAAIA,iBAAgBC,EAAAA,EAAAA,MAAcC,OAC3C,E,4CCwBMC,EAAa,WACjB,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACEE,EAAAA,EAAAA,KAAA,UAAQC,UAAU,oBAAmBC,UACnCC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,aAAYC,SAAA,CACtBJ,EAAE,0BAA2B,KAC9BE,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAI,kBAAmBJ,UAAU,kBAAiBC,UACtDF,EAAAA,EAAAA,KAAA,KAAAE,SAAIJ,EAAE,mBAKhB,EAqJA,EAvGe,WACb,IAAQA,GAAMC,EAAAA,EAAAA,KAAND,EACFQ,GAAWC,EAAAA,EAAAA,MAGXC,EADQC,IACKC,IAAI,SAEvBC,EAAAA,EAAAA,YAAU,WACRL,GAASM,EAAAA,EAAAA,MACX,GAAG,CAACN,IAEJ,IAAAO,GAA+CC,EAAAA,EAAAA,KAC7C,SAACC,GAAgB,MAAM,CACrBC,QAASD,EAAME,KAAKD,QACpBE,KAAMH,EAAME,KAAKC,KACjBC,MAAOJ,EAAME,KAAKE,MAClBC,aAAcL,EAAME,KAAKG,aAC1B,IANKJ,EAAOH,EAAPG,QAASI,EAAYP,EAAZO,aAAcF,EAAIL,EAAJK,KAAMC,EAAKN,EAALM,MAY/BE,GAAiBC,EAAAA,EAAAA,GACrBC,EAAAA,KAAaC,MAAM,CACjBC,SAAUF,EAAAA,KAAaG,SAAS5B,EAAE,0BAClC6B,SAAUJ,EAAAA,KAAaG,SAAS5B,EAAE,6BAWtC,OACEK,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAA1B,SAAA,CACGkB,GAAgBF,GACflB,EAAAA,EAAAA,KAAC6B,EAAAA,GAAQ,CAACxB,GAAIG,GAAc,MAC1B,MAEJL,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CAACC,aAAa/B,EAAAA,EAAAA,KAACH,EAAU,IAAIK,SAAA,EACtCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMC,SAAEJ,EAAE,cACxBE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAiBC,SAC3BJ,EAAE,8DAGJqB,IACCnB,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACC,QAAQ,SAAShC,UAAU,OAAMC,SACrCiB,KAILhB,EAAAA,EAAAA,MAAC+B,EAAAA,EAAY,CACXC,SAvBS,SAACC,GAChB9B,GAAS+B,EAAAA,EAAAA,IAAUD,EAAmB,SAAGA,EAAmB,UAC9D,EAsBQE,SAAUjB,EACVkB,cAAe,CAAEd,SAAU,OAAQE,SAAU,QAASzB,SAAA,EAEtDF,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CACRC,MAAO3C,EAAE,YACT4C,KAAK,OACLC,KAAK,WACLC,YAAa9C,EAAE,uBACf+C,eAAgB,UAElB7C,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CACRC,MAAO3C,EAAE,YACT4C,KAAK,WACLC,KAAK,WACLC,YAAa9C,EAAE,uBACf+C,eAAgB,OAAO3C,UAEvBF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,yBAAyBJ,UAAU,uBAAsBC,UAChEF,EAAAA,EAAAA,KAAA,SAAAE,SAAQJ,EAAE,gCAIdE,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CACRC,MAAM,cACNC,KAAK,WACLC,KAAK,WACLE,eAAgB,UAGlB7C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAM,CAACb,QAAQ,UAAUS,KAAK,SAASK,SAAU/B,EAAQd,SACvDJ,EAAE,sBAajB,C","sources":["hooks/useQuery.ts","pages/auth2/Login2.tsx"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\n\nconst useQuery = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport default useQuery;\n","import React, { useEffect } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\n\n// actions\nimport { resetAuth, loginUser } from \"../../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../../redux/store\";\n\nimport { useQuery } from \"../../hooks/\";\n\n// components\nimport { VerticalForm, FormInput } from \"../../components/\";\n\nimport AuthLayout from \"./AuthLayout\";\n\ninterface UserData {\n  username: string;\n  password: string;\n}\n\n/* bottom link */\nconst BottomLink = () => {\n  const { t } = useTranslation();\n\n  return (\n    <footer className=\"footer footer-alt\">\n      <p className=\"text-muted\">\n        {t(\"Don't have an account?\")}{\" \"}\n        <Link to={\"/auth/register2\"} className=\"text-muted ms-1\">\n          <b>{t(\"Sign Up\")}</b>\n        </Link>\n      </p>\n    </footer>\n  );\n};\n\n/* social links */\nconst SocialLinks = () => {\n  const socialLinks = [\n    {\n      variant: \"primary\",\n      icon: \"facebook\",\n    },\n    {\n      variant: \"danger\",\n      icon: \"google\",\n    },\n    {\n      variant: \"info\",\n      icon: \"twitter\",\n    },\n    {\n      variant: \"secondary\",\n      icon: \"github\",\n    },\n  ];\n  return (\n    <>\n      <ul className=\"social-list list-inline mt-3 mb-0\">\n        {(socialLinks || []).map((item, index) => {\n          return (\n            <li key={index} className=\"list-inline-item\">\n              <Link\n                to=\"#\"\n                className={classNames(\n                  \"social-list-item\",\n                  \"border-\" + item.variant,\n                  \"text-\" + item.variant\n                )}\n              >\n                <i className={classNames(\"mdi\", \"mdi-\" + item.icon)}></i>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nconst Login2 = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch<AppDispatch>();\n\n  const query = useQuery();\n  const next = query.get(\"next\");\n\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n\n  const { loading, userLoggedIn, user, error } = useSelector(\n    (state: RootState) => ({\n      loading: state.Auth.loading,\n      user: state.Auth.user,\n      error: state.Auth.error,\n      userLoggedIn: state.Auth.userLoggedIn,\n    })\n  );\n\n  /*\n   * form validation schema\n   */\n  const schemaResolver = yupResolver(\n    yup.object().shape({\n      username: yup.string().required(t(\"Please enter Username\")),\n      password: yup.string().required(t(\"Please enter Password\")),\n    })\n  );\n\n  /*\n   * handle form submission\n   */\n  const onSubmit = (formData: UserData) => {\n    dispatch(loginUser(formData[\"username\"], formData[\"password\"]));\n  };\n\n  return (\n    <>\n      {userLoggedIn || user ? (\n        <Navigate to={next ? next : \"/\"}></Navigate>\n      ) : null}\n\n      <AuthLayout bottomLinks={<BottomLink />}>\n        <h4 className=\"mt-0\">{t(\"Sign In\")}</h4>\n        <p className=\"text-muted mb-4\">\n          {t(\"Enter your email address and password to access account.\")}\n        </p>\n\n        {error && (\n          <Alert variant=\"danger\" className=\"my-2\">\n            {error}\n          </Alert>\n        )}\n\n        <VerticalForm\n          onSubmit={onSubmit}\n          resolver={schemaResolver}\n          defaultValues={{ username: \"test\", password: \"test\" }}\n        >\n          <FormInput\n            label={t(\"Username\")}\n            type=\"text\"\n            name=\"username\"\n            placeholder={t(\"Enter your Username\")}\n            containerClass={\"mb-3\"}\n          />\n          <FormInput\n            label={t(\"Password\")}\n            type=\"password\"\n            name=\"password\"\n            placeholder={t(\"Enter your password\")}\n            containerClass={\"mb-3\"}\n          >\n            <Link to=\"/auth/forget-password2\" className=\"text-muted float-end\">\n              <small>{t(\"Forgot your password?\")}</small>\n            </Link>\n          </FormInput>\n\n          <FormInput\n            label=\"Remember me\"\n            type=\"checkbox\"\n            name=\"checkbox\"\n            containerClass={\"mb-3\"}\n          />\n\n          <div className=\"d-grid mb-0 text-center\">\n            <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n              {t(\"Log In\")}\n            </Button>\n          </div>\n\n          {/* social links */}\n          {/* <div className=\"text-center mt-4\">\n            <p className=\"text-muted font-16\">{t(\"Sign in with\")}</p>\n            <SocialLinks />\n          </div> */}\n        </VerticalForm>\n      </AuthLayout>\n    </>\n  );\n};\n\nexport default Login2;\n"],"names":["URLSearchParams","useLocation","search","BottomLink","t","useTranslation","_jsx","className","children","_jsxs","Link","to","dispatch","useDispatch","next","useQuery","get","useEffect","resetAuth","_useSelector","useSelector","state","loading","Auth","user","error","userLoggedIn","schemaResolver","yupResolver","yup","shape","username","required","password","_Fragment","Navigate","AuthLayout","bottomLinks","Alert","variant","VerticalForm","onSubmit","formData","loginUser","resolver","defaultValues","FormInput","label","type","name","placeholder","containerClass","Button","disabled"],"sourceRoot":""}